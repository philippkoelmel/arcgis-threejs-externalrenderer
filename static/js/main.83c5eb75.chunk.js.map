{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","GlobeFSThree.tsx","ArcGIS.tsx","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","GlobeFSThree","clock","Clock","mesh","radiansPerSecond","MathUtils","degToRad","context","renderer","scene","geometry","BoxGeometry","material","MeshPhongMaterial","color","flatShading","this","Mesh","scale","set","add","posEst","renderPos","externalRenderers","view","SpatialReference","WGS84","position","goTo","target","zoom","clockDelta","getDelta","rotation","x","y","z","dispose","ArcGIS","undefined","process","REACT_APP_ARCGIS_APIKEY","config","apiKey","map","Map","basemap","SceneView","container","viewingMode","camera","spatialReference","wkid","heading","tilt","environment","lighting","cameraTrackingEnabled","date","Date","ExternalRendererThree","start","console","error","className","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIAAA,SAASA,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,K,mLCqCfC,E,iDA1CHC,MAAe,IAAIC,I,KACnBC,U,OAEAC,iBAA2BC,IAAUC,SAAS,I,yCAEtD,SAAMC,EAAcC,EAAyBC,GACzC,IAAIC,EAAW,IAAIC,IAAY,IAAO,IAAO,KACzCC,EAAW,IAAIC,IAAkB,CACjCC,MAAO,SACPC,aAAa,IAGjBC,KAAKb,KAAO,IAAIc,IAAKP,EAAUE,GAC/BI,KAAKb,KAAKe,MAAMC,IAAI,GAAI,GAAI,IAC5BV,EAAMW,IAAIJ,KAAKb,MAEf,IAAIkB,EAAS,CAAC,MAAO,OAAQ,KACzBC,EAAY,CAAC,EAAG,EAAG,GACvBC,IAAsChB,EAAQiB,KAAMH,EAAQ,EAAGI,IAAiBC,MAAOJ,EAAW,EAAG,GAErGN,KAAKb,KAAKwB,SAASR,IAAIG,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAE7Df,EAAQiB,KAAKI,KAAK,CACdC,OAAQ,CAACR,EAAO,GAAIA,EAAO,IAC3BS,KAAM,M,oBAId,SAAOvB,GACH,IAAMwB,EAAaf,KAAKf,MAAM+B,WAE9BhB,KAAKb,KAAM8B,SAASC,GAAKlB,KAAKZ,iBAAmB2B,EACjDf,KAAKb,KAAM8B,SAASE,GAAKnB,KAAKZ,iBAAmB2B,EACjDf,KAAKb,KAAM8B,SAASG,GAAKpB,KAAKZ,iBAAmB2B,I,qBAGrD,SAAQxB,GACJS,KAAKb,KAAMS,SAASyB,UACpBrB,KAAKb,KAAMO,SAAS2B,c,uBCrCPC,E,uKAEnB,WAEE,QAA4CC,IAAxCC,kLAAYC,wBAAhB,CAKAC,IAAOC,OAASH,kLAAYC,wBAE5B,IAAMG,EAAM,IAAIC,IAAI,CAClBC,QAAS,sBAGLtB,EAAO,IAAIuB,IAAU,CACzBC,UAAW,cACXJ,IAAKA,EACLK,YAAa,SACbC,OAAQ,CAENvB,SAAU,CACRO,GAAI,QACJC,EAAG,QACHC,EAAG,QACHe,iBAAkB,CAAEC,KAAM,SAE5BC,QAAS,EACTC,KAAM,WAGwBf,IAA9Bf,EAAK+B,YAAYC,WACnBhC,EAAK+B,YAAYC,SAASC,uBAAwB,EAClDjC,EAAK+B,YAAYC,SAASE,KAAO,IAAIC,MAGvCC,IAAsBC,MAAMrC,EAAM,IAAIxB,QA/BpC8D,QAAQC,MAAM,gF,oBAkClB,WACE,OACE,qBAAKhE,GAAG,cAAciE,UAAU,MAAM,cAAY,uB,GAzCpBC,aCHpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83c5eb75.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 709;","import * as externalRenderers from \"@arcgis/core/views/3d/externalRenderers\";\r\nimport { WebGLRenderer, Scene, BoxGeometry, Mesh, Clock, MathUtils, MeshPhongMaterial, Material, BufferGeometry } from \"three\";\r\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\"\r\nimport { ExternalRendererThreeCallback } from \"@philippkoelmel/arcgis-threejs-externalrenderer\";\r\n\r\nclass GlobeFSThree implements ExternalRendererThreeCallback {\r\n\r\n    private clock: Clock = new Clock();\r\n    private mesh?: Mesh<BufferGeometry, Material>;\r\n\r\n    private radiansPerSecond: number = MathUtils.degToRad(30);;\r\n\r\n    setup(context: any, renderer: WebGLRenderer, scene: Scene): void {\r\n        let geometry = new BoxGeometry(10000, 10000, 10000);\r\n        let material = new MeshPhongMaterial({\r\n            color: 0xFF0000,\r\n            flatShading: true,\r\n        });\r\n\r\n        this.mesh = new Mesh(geometry, material);\r\n        this.mesh.scale.set(10, 10, 10);\r\n        scene.add(this.mesh);\r\n\r\n        let posEst = [9.993, 53.679, 400000];\r\n        let renderPos = [0, 0, 0];\r\n        externalRenderers.toRenderCoordinates(context.view, posEst, 0, SpatialReference.WGS84, renderPos, 0, 1);\r\n\r\n        this.mesh.position.set(renderPos[0], renderPos[1], renderPos[2]);\r\n\r\n        context.view.goTo({\r\n            target: [posEst[0], posEst[1]],\r\n            zoom: 5,\r\n        });\r\n    }\r\n\r\n    render(context: any): void {\r\n        const clockDelta = this.clock.getDelta();\r\n\r\n        this.mesh!.rotation.x += this.radiansPerSecond * clockDelta;\r\n        this.mesh!.rotation.y += this.radiansPerSecond * clockDelta;\r\n        this.mesh!.rotation.z += this.radiansPerSecond * clockDelta;\r\n    }\r\n\r\n    dispose(context: any): void {\r\n        this.mesh!.material.dispose();\r\n        this.mesh!.geometry.dispose();\r\n    }\r\n}\r\n\r\nexport default GlobeFSThree;","import React, { Component } from 'react';\r\nimport './ArcGIS.css';\r\nimport Map from \"@arcgis/core/Map\";\r\nimport SceneView from \"@arcgis/core/views/SceneView\";\r\nimport config from \"@arcgis/core/config\";\r\nimport GlobeFSThree from './GlobeFSThree';\r\nimport { ExternalRendererThree } from \"@philippkoelmel/arcgis-threejs-externalrenderer\";\r\n\r\nexport default class ArcGIS extends Component<{}> {\r\n\r\n  componentDidMount() {\r\n\r\n    if (process.env.REACT_APP_ARCGIS_APIKEY === undefined) {\r\n      console.error(\"Please add your ARCGIS API key to the environment (see .env.local.example)\");\r\n      return;\r\n    }\r\n\r\n    config.apiKey = process.env.REACT_APP_ARCGIS_APIKEY;\r\n\r\n    const map = new Map({\r\n      basemap: \"arcgis-light-gray\"\r\n    });\r\n\r\n    const view = new SceneView({\r\n      container: \"arcgis_view\",\r\n      map: map,\r\n      viewingMode: \"global\",\r\n      camera: {\r\n        // ??\r\n        position: {\r\n          x: -9932671,\r\n          y: 2380007,\r\n          z: 1687219,\r\n          spatialReference: { wkid: 102100 }\r\n        },\r\n        heading: 0,\r\n        tilt: 35\r\n      },\r\n    });\r\n    if (view.environment.lighting !== undefined) {\r\n      view.environment.lighting.cameraTrackingEnabled = false;\r\n      view.environment.lighting.date = new Date();\r\n    }\r\n\r\n    ExternalRendererThree.start(view, new GlobeFSThree());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"arcgis_view\" className=\"map\" data-testid=\"arcgis_element\">\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ArcGIS from './ArcGIS';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ArcGIS />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}