(this.webpackJsonpexample=this.webpackJsonpexample||[]).push([[52],{1200:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return it}));var i=n(8),a=n.n(i),r=n(15),o=n(29),l=n(2),s=n(3),c=n(6),u=n(7),f=n(0),v=n(4),d=n(25),_=n(36),m=n(1),h=n(17),p=(n(18),n(16),n(12)),g=n(978),y=n(387),b=n(260),x=n(43),S=n(476),C=n(14),O=n(107),T=n(657),w=n(412),I=n(11),D=n(88),P=(n(109),n(137),n(128),n(269),n(38),n(63)),z=n(110),A=n(871),E=function(){function e(t,n){Object(l.a)(this,e),this._width=0,this._height=0,this._free=[],this._width=t,this._height=n,this._free.push(new A.a(0,0,t,n))}return Object(s.a)(e,[{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"allocate",value:function(e,t){if(e>this._width||t>this._height)return new A.a;for(var n=null,i=-1,a=0;a<this._free.length;++a){var r=this._free[a];e<=r.width&&t<=r.height&&(null===n||r.y<=n.y&&r.x<=n.x)&&(n=r,i=a)}return null===n?new A.a:(this._free.splice(i,1),n.width<n.height?(n.width>e&&this._free.push(new A.a(n.x+e,n.y,n.width-e,t)),n.height>t&&this._free.push(new A.a(n.x,n.y+t,n.width,n.height-t))):(n.width>e&&this._free.push(new A.a(n.x+e,n.y,n.width-e,n.height)),n.height>t&&this._free.push(new A.a(n.x,n.y+t,e,n.height-t))),new A.a(n.x,n.y,e,t))}},{key:"release",value:function(e){for(var t=0;t<this._free.length;++t){var n=this._free[t];if(n.y===e.y&&n.height===e.height&&n.x+n.width===e.x)n.width+=e.width;else if(n.x===e.x&&n.width===e.width&&n.y+n.height===e.y)n.height+=e.height;else if(e.y===n.y&&e.height===n.height&&e.x+e.width===n.x)n.x=e.x,n.width+=e.width;else{if(e.x!==n.x||e.width!==n.width||e.y+e.height!==n.y)continue;n.y=e.y,n.height+=e.height}this._free.splice(t,1),this.release(e)}this._free.push(e)}}]),e}(),M=function(){function e(t,n,i){Object(l.a)(this,e),this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=t,this.height=n,this._glyphSource=i,this._binPack=new E(t-4,n-4),this._glyphData.push(new Uint8Array(t*n)),this._dirties.push(!0),this._textures.push(void 0)}return Object(s.a)(e,[{key:"getGlyphItems",value:function(e,t){var n,i=this,a=[],r=this._glyphSource,o=new Set,l=Object(I.a)(t);try{for(l.s();!(n=l.n()).done;){var s=n.value,c=Math.floor(.00390625*s);o.add(c)}}catch(f){l.e(f)}finally{l.f()}var u=[];return o.forEach((function(t){if(t<=256){var n=e+t;if(i._rangePromises.has(n))u.push(i._rangePromises.get(n));else{var a=r.getRange(e,t).then((function(){i._rangePromises.delete(n)}),(function(){i._rangePromises.delete(n)}));i._rangePromises.set(n,a),u.push(a)}}})),Promise.all(u).then((function(){var n=i._glyphIndex[e];n||(n={},i._glyphIndex[e]=n);var o,l=Object(I.a)(t);try{for(l.s();!(o=l.n()).done;){var s=o.value,c=n[s];if(c)a[s]={sdf:!0,rect:c.rect,metrics:c.metrics,page:c.page,code:s};else{var u=r.getGlyph(e,s);if(u&&u.metrics){var v=u.metrics,d=void 0;if(0===v.width)d=new A.a(0,0,0,0);else{var _=v.width+6,m=v.height+6,h=_%4?4-_%4:4,p=m%4?4-m%4:4;1===h&&(h=5),1===p&&(p=5),(d=i._binPack.allocate(_+h,m+p)).isEmpty&&(i._dirties[i._currentPage]||(i._glyphData[i._currentPage]=null),i._currentPage=i._glyphData.length,i._glyphData.push(new Uint8Array(i.width*i.height)),i._dirties.push(!0),i._textures.push(void 0),i._binPack=new E(i.width-4,i.height-4),d=i._binPack.allocate(_+h,m+p));var g=i._glyphData[i._currentPage],y=u.bitmap,b=void 0,x=void 0;if(y)for(var S=0;S<m;S++){b=_*S,x=i.width*(d.y+S+1)+d.x;for(var C=0;C<_;C++)g[x+C+1]=y[b+C]}}n[s]={rect:d,metrics:v,tileIDs:null,page:i._currentPage},a[s]={sdf:!0,rect:d,metrics:v,page:i._currentPage,code:s},i._dirties[i._currentPage]=!0}}}}catch(f){l.e(f)}finally{l.f()}return a}))}},{key:"removeGlyphs",value:function(e){for(var t in this._glyphIndex){var n=this._glyphIndex[t];if(n){var i=void 0;for(var a in n)if((i=n[a]).tileIDs.delete(e),0===i.tileIDs.size){for(var r=this._glyphData[i.page],o=i.rect,l=void 0,s=void 0,c=0;c<o.height;c++)for(l=this.width*(o.y+c)+o.x,s=0;s<o.width;s++)r[l+s]=0;delete n[a],this._dirties[i.page]=!0}}}}},{key:"bind",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this._textures[n]||(this._textures[n]=new P.a(e,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));var a=this._textures[n];a.setSamplingMode(t),this._dirties[n]&&a.setData(this._glyphData[n]),e.bindTexture(a,i),this._dirties[n]=!1}},{key:"dispose",value:function(){this._binPack=null;var e,t=Object(I.a)(this._textures);try{for(t.s();!(e=t.n()).done;){var n=e.value;n&&n.dispose()}}catch(i){t.e(i)}finally{t.f()}this._textures.length=0}}]),e}(),V=n(652),L=function(){function e(t){if(Object(l.a)(this,e),this._metrics=[],this._bitmaps=[],t)for(;t.next();)if(1===t.tag()){for(var n=t.getMessage();n.next();)if(3===n.tag()){for(var i=n.getMessage(),a=void 0,r=void 0,o=void 0,s=void 0,c=void 0,u=void 0,f=void 0;i.next();)switch(i.tag()){case 1:a=i.getUInt32();break;case 2:r=i.getBytes();break;case 3:o=i.getUInt32();break;case 4:s=i.getUInt32();break;case 5:c=i.getSInt32();break;case 6:u=i.getSInt32();break;case 7:f=i.getUInt32();break;default:i.skip()}i.release(),a&&(this._metrics[a]={width:o,height:s,left:c,top:u,advance:f},this._bitmaps[a]=r)}else n.skip();n.release()}else t.skip()}return Object(s.a)(e,[{key:"getMetrics",value:function(e){return this._metrics[e]}},{key:"getBitmap",value:function(e){return this._bitmaps[e]}}]),e}(),R=function(){function e(){Object(l.a)(this,e),this._ranges=[]}return Object(s.a)(e,[{key:"getRange",value:function(e){return this._ranges[e]}},{key:"addRange",value:function(e,t){this._ranges[e]=t}}]),e}(),k=function(){function e(t){Object(l.a)(this,e),this._glyphInfo={},this._baseURL=t}return Object(s.a)(e,[{key:"getRange",value:function(e,t){var n=this._getFontStack(e);if(n.getRange(t))return Promise.resolve();var i=256*t,a=i+255,r=this._baseURL.replace("{fontstack}",e).replace("{range}",i+"-"+a);return Object(O.default)(r,{responseType:"array-buffer"}).then((function(e){n.addRange(t,new L(new V.a(new Uint8Array(e.data),new DataView(e.data))))})).catch((function(){n.addRange(t,new L)}))}},{key:"getGlyph",value:function(e,t){var n=this._getFontStack(e);if(n){var i=Math.floor(t/256);if(!(i>256)){var a=n.getRange(i);return a?{metrics:a.getMetrics(t),bitmap:a.getBitmap(t)}:void 0}}}},{key:"_getFontStack",value:function(e){var t=this._glyphInfo[e];return t||(t=this._glyphInfo[e]=new R),t}}]),e}(),j=n(906),F="dasharray-",U=function(){function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(l.a)(this,e),this._size=[],this._mosaicsData=[],this._textures=[],this._dirties=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects={},this.pixelRatio=1,(t<=0||n<=0)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=t,this._pageHeight=n,i>0&&(this._maxItemSize=i),this._binPack=new E(t-4,n-4)}return Object(s.a)(e,[{key:"dispose",value:function(){this._binPack=null,this._mosaicRects={};var e,t=Object(I.a)(this._textures);try{for(t.s();!(e=t.n()).done;){var n=e.value;n&&n.dispose()}}catch(i){t.e(i)}finally{t.f()}this._textures.length=0}},{key:"getWidth",value:function(e){return e>=this._size.length?-1:this._size[e][0]}},{key:"getHeight",value:function(e){return e>=this._size.length?-1:this._size[e][1]}},{key:"getPageSize",value:function(e){return e>=this._size.length?null:this._size[e]}},{key:"setSpriteSource",value:function(e){if(this.dispose(),this.pixelRatio=e.devicePixelRatio,0===this._mosaicsData.length){this._binPack=new E(this._pageWidth-4,this._pageHeight-4);var t=Math.floor(this._pageWidth),n=Math.floor(this._pageHeight),i=new Uint32Array(t*n);this._mosaicsData[0]=i,this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0)}this._sprites=e}},{key:"getSpriteItem",value:function(e){var t,n,i,a,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],l=this._mosaicRects[e];if(l)return l;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;if(e&&e.startsWith(F)?(t=this._rasterizeDash(e),i=(n=Object(o.a)(t,2))[0],a=n[1],r=!0):i=this._sprites.getSpriteInfo(e),!i||!i.width||!i.height||i.width<0||i.height<0)return null;var s=i.width,c=i.height,u=this._allocateImage(s,c),f=Object(o.a)(u,3),v=f[0],d=f[1],_=f[2];return v.width<=0?null:(this._copy(v,i,d,_,r,a),l={rect:v,width:s,height:c,sdf:i.sdf,simplePattern:!1,pixelRatio:i.pixelRatio,page:d},this._mosaicRects[e]=l,l)}},{key:"getSpriteItems",value:function(e){var t,n={},i=Object(I.a)(e);try{for(i.s();!(t=i.n()).done;){var a=t.value;n[a.name]=this.getSpriteItem(a.name,a.repeat)}}catch(r){i.e(r)}finally{i.f()}return n}},{key:"getMosaicItemPosition",value:function(e,t){var n=this.getSpriteItem(e,t),i=n&&n.rect;if(!i)return null;i.width=n.width,i.height=n.height;var a=n.width,r=n.height;return{tl:[i.x+2,i.y+2],br:[i.x+2+a,i.y+2+r],page:n.page}}},{key:"bind",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this._textures[n]||(this._textures[n]=new P.a(e,{pixelFormat:6408,dataType:5121,wrapMode:33071,width:this._size[n][0],height:this._size[n][1]},new Uint8Array(this._mosaicsData[n].buffer)));var a=this._textures[n];a.setSamplingMode(t),this._dirties[n]&&a.setData(new Uint8Array(this._mosaicsData[n].buffer)),e.bindTexture(a,i),this._dirties[n]=!1}},{key:"_copy",value:function(t,n,i,a,r,o){if(this._sprites&&"loaded"===this._sprites.loadStatus&&!(i>=this._mosaicsData.length)){var l=new Uint32Array(o?o.buffer:this._sprites.image.buffer),s=this._mosaicsData[i];s&&l||console.error("Source or target images are uninitialized!");var c=o?n.width:this._sprites.width;e._copyBits(l,c,n.x,n.y,s,a[0],t.x+2,t.y+2,n.width,n.height,r),this._dirties[i]=!0}}},{key:"_allocateImage",value:function(e,t){e+=2,t+=2;var n=Math.max(e,t);if(this._maxItemSize&&this._maxItemSize<n){var i=new A.a(0,0,e,t);return this._mosaicsData.push(new Uint32Array(e*t)),this._dirties.push(!0),this._size.push([e,t]),this._textures.push(void 0),[i,this._mosaicsData.length-1,[e,t]]}var a=e%4?4-e%4:4,r=t%4?4-t%4:4;1===a&&(a=5),1===r&&(r=5);var o=this._binPack.allocate(e+a,t+r);return o.width<=0?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new E(this._pageWidth-4,this._pageHeight-4),this._allocateImage(e,t)):[o,this._currentPage,[this._pageWidth,this._pageHeight]]}},{key:"_rasterizeDash",value:function(e){var t=e.match(/\[(.*?)\]/);if(!t)return null;var n=t[1].split(",").map(Number),i=e.slice(e.lastIndexOf("-")+1),a=j.c.rasterizeDash(n,i),r=Object(o.a)(a,3),l=r[0];return[{x:0,y:0,width:r[1],height:r[2],sdf:!0,pixelRatio:1},new Uint8Array(l.buffer)]}}],[{key:"_copyBits",value:function(e,t,n,i,a,r,o,l,s,c,u){var f=i*t+n,v=l*r+o;if(u){v-=r;for(var d=-1;d<=c;f=((++d+c)%c+i)*t+n,v+=r)for(var _=-1;_<=s;_++)a[v+_]=e[f+(_+s)%s]}else for(var m=0;m<c;m++){for(var h=0;h<s;h++)a[v+h]=e[f+h];f+=t,v+=r}}}]),e}(),N=n(979);var H=n(639),B=new T.a(10),G=new Map,W=function(){function e(t,n,i){Object(l.a)(this,e),this._vectorTileLayer=t,this._styleRepository=n,this.devicePixelRatio=i,this._spriteMosaic=null,this._glyphMosaic=null,this._connection=null}return Object(s.a)(e,[{key:"destroy",value:function(){this._connection&&(this._connection.close(),this._connection=null),this._styleRepository=null,this._vectorTileLayer=null,this._spriteMosaic&&(this._spriteMosaic=null),this._glyphMosaic&&(this._glyphMosaic=null)}},{key:"spriteMosaic",get:function(){var e=this;return this._spriteSourcePromise.then((function(){return e._spriteMosaic}))}},{key:"glyphMosaic",get:function(){return this._glyphMosaic}},{key:"start",value:function(){var e=Object(r.a)(a.a.mark((function e(t){var n,i,r,o,l,s,c=this;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(o in n=this._vectorTileLayer,i=n.sourceNameToSource,r=[],i)r.push(this._fetchTileMap(i[o],t));return this._spriteSourcePromise=this._vectorTileLayer.loadSpriteSource(this.devicePixelRatio,t),this._spriteSourcePromise.then((function(e){c._spriteMosaic=new U(1024,1024,250),c._spriteMosaic.setSpriteSource(e)})),l=this._styleRepository,s=new k(l.glyphs),e.abrupt("return",(this._glyphMosaic=new M(1024,1024,s),this._broadcastPromise=Object(w.b)("WorkerTileHandler",{client:this,schedule:t.schedule,signal:t.signal}).then((function(e){return c._connection=e,Promise.all(c._connection.broadcast("setStyle",{style:n.currentStyleInfo.style,vectorTileLayerMaxBuffers:Object(h.a)("vectortilelayer-max-buffers")},t))})),Promise.all(r)));case 5:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"updateStyle",value:function(){var e=Object(r.a)(a.a.mark((function e(t){var n=this;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._broadcastPromise;case 2:return this._broadcastPromise=new Promise((function(e,i){Promise.all(n._connection.broadcast("updateStyle",t)).then(e,i)})),e.abrupt("return",this._broadcastPromise);case 4:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"setStyle",value:function(){var e=Object(r.a)(a.a.mark((function e(t,n){var i,r,o,l,s=this;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._broadcastPromise;case 2:for(o in this._styleRepository=t,i=this._vectorTileLayer.sourceNameToSource,r=[],i)r.push(this._fetchTileMap(i[o],null));return this._spriteSourcePromise=this._vectorTileLayer.loadSpriteSource(this.devicePixelRatio,null),this._spriteSourcePromise.then((function(e){s._spriteMosaic=new U(1024,1024,250),s._spriteMosaic.setSpriteSource(e)})),l=new k(t.glyphs),e.abrupt("return",(this._glyphMosaic=new M(1024,1024,l),this._broadcastPromise=new Promise((function(e,t){Promise.all(s._connection.broadcast("setStyle",{style:n,vectorTileLayerMaxBuffers:Object(h.a)("vectortilelayer-max-buffers")})).then(e,t)})),r.push(this._broadcastPromise),Promise.all(r)));case 8:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"fetchTileData",value:function(e,t){var n=this;return this._getRefKeys(e,t).then((function(e){var i=n._vectorTileLayer.sourceNameToSource,a=[];for(var r in i)a.push(r);return n._getSourcesData(a,e,t)}))}},{key:"parseTileData",value:function(e,t){var n=this,i=e&&e.data;if(!i)return Promise.resolve(null);var a=i.sourceName2DataAndRefKey,r=i.transferList;return 0===Object.keys(a).length?Promise.resolve(null):this._broadcastPromise.then((function(){return n._connection.getAvailableClient().then((function(n){return n.invoke("createTileAndParse",{key:e.key.id,sourceName2DataAndRefKey:a,styleLayerUIDs:e.styleLayerUIDs},Object(C.a)(Object(C.a)({},t),{},{transferList:r})).then((function(e){return{tileData:e}}))}))}))}},{key:"getSprites",value:function(){var e=Object(r.a)(a.a.mark((function e(t){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._spriteSourcePromise;case 2:return e.abrupt("return",this._spriteMosaic.getSpriteItems(t));case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"getGlyphs",value:function(e){return this._glyphMosaic.getGlyphItems(e.font,e.codePoints)}},{key:"perfReport",value:function(e){!function(e,t,n){if(window.PERFORMANCE_RECORDING_STORAGE){var i=window.PERFORMANCE_RECORDING_STORAGE;i.perf=i.perf||{};var a=i.perf;a[e]=a[e]||{start:null,time:0,min:void 0,max:void 0,samples:[],unit:n},a[e].time+=t,a[e].samples.push(t),(null==a[e].min||t<a[e].min)&&(a[e].min=t),(null==a[e].max||t>a[e].max)&&(a[e].max=t)}}(e.key,e.milliseconds,"ms")}},{key:"_getTilePayload",value:function(){var e=Object(r.a)(a.a.mark((function e(t,n,i){var r,o;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=H.a.pool.acquire(t.id),o=this._vectorTileLayer.sourceNameToSource[n].getSourceTileUrl(r.level,r.row,r.col),H.a.pool.release(r),e.prev=2,e.next=5,this.request(o,i);case 5:return e.t0=e.sent,e.t1=n,e.abrupt("return",{protobuff:e.t0,sourceName:e.t1});case 10:if(e.prev=10,e.t2=e.catch(2),!Object(d.n)(e.t2)){e.next=14;break}throw e.t2;case 14:return e.abrupt("return",{protobuff:null,sourceName:n});case 15:case"end":return e.stop()}}),e,this,[[2,10]])})));return function(t,n,i){return e.apply(this,arguments)}}()},{key:"request",value:function(e,t){return Object(O.default)(e,Object(C.a)({responseType:"array-buffer"},t)).then((function(e){return e.data}))}},{key:"_fetchTileMap",value:function(){var e=Object(r.a)(a.a.mark((function e(t,n){var i,r,o;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.capabilities.operations.supportsTileMap||!t.tileIndex){e.next=2;break}return e.abrupt("return",Promise.resolve());case 2:if(t.tileMapURL){e.next=4;break}return e.abrupt("return");case 4:if(!(i=B.get(t.tileMapURL))){e.next=7;break}return e.abrupt("return",void(t.tileIndex=i));case 7:if(!G.has(t.tileMapURL)){e.next=20;break}return e.prev=8,e.next=11,G.get(t.tileMapURL);case 11:r=e.sent,t.tileIndex=new N.a(r.data),e.next=19;break;case 15:if(e.prev=15,e.t0=e.catch(8),!Object(d.n)(e.t0)){e.next=19;break}throw e.t0;case 19:return e.abrupt("return");case 20:return o=Object(O.default)(t.tileMapURL,n),G.set(t.tileMapURL,o),e.prev=22,e.next=25,o;case 25:r=e.sent,G.delete(t.tileMapURL),B.put(t.tileMapURL,t.tileIndex),t.tileIndex=new N.a(r.data),e.next=35;break;case 31:if(e.prev=31,e.t1=e.catch(22),G.delete(t.tileMapURL),!Object(d.n)(e.t1)){e.next=35;break}throw e.t1;case 35:case"end":return e.stop()}}),e,null,[[8,15],[22,31]])})));return function(t,n){return e.apply(this,arguments)}}()},{key:"_getRefKeys",value:function(e,t){var n=this._vectorTileLayer.sourceNameToSource,i=new Array;for(var a in n){var r=n[a].getRefKey(e,t);i.push(r)}return Object(d.k)(i)}},{key:"_getSourcesData",value:function(e,t,n){for(var i=[],a=0;a<t.length;a++)if(null==t[a].value||null==e[a])i.push(null);else{var r=this._getTilePayload(t[a].value,e[a],n);i.push(r)}return Object(d.k)(i).then((function(e){for(var n={},i=[],a=0;a<e.length;a++)if(e[a].value&&e[a].value&&e[a].value.protobuff&&e[a].value.protobuff.byteLength>0){var r=t[a].value.id;n[e[a].value.sourceName]={refKey:r,protobuff:e[a].value.protobuff},i.push(e[a].value.protobuff)}return{sourceName2DataAndRefKey:n,transferList:i}}))}}]),e}(),q=n(730),Z=n(604),Y=n(660);function X(e,t,n,i,a,r){var l,s=i.iconRotationAlignment,c=i.textRotationAlignment,u=i.iconTranslate,f=i.iconTranslateAnchor,v=i.textTranslate,d=i.textTranslateAnchor,_=0,m=Object(I.a)(e.colliders);try{for(m.s();!(l=m.n()).done;){var h=l.value,p=0===h.partIndex?u:v,g=Object(o.a)(p,2),y=g[0],b=g[1],x=0===h.partIndex?f:d,S=h.minLod<=r&&r<=h.maxLod;_+=S?0:1,h.enabled=S,h.xScreen=h.xTile*a[0]+h.yTile*a[3]+a[6],h.yScreen=h.xTile*a[1]+h.yTile*a[4]+a[7],0===x?(h.xScreen+=n*y-t*b,h.yScreen+=t*y+n*b):(h.xScreen+=y,h.yScreen+=b),1===(0===h.partIndex?s:c)?(h.dxScreen=h.dxPixels,h.dyScreen=h.dyPixels):(h.dxScreen=n*(h.dxPixels+h.width/2)-t*(h.dyPixels+h.height/2)-h.width/2,h.dyScreen=t*(h.dxPixels+h.width/2)+n*(h.dyPixels+h.height/2)-h.height/2)}}catch(C){m.e(C)}finally{m.f()}e.colliders.length>0&&_===e.colliders.length&&(e.unique.show=!1)}var K=function(){function e(t,n,i,a,r,o){Object(l.a)(this,e),this._symbols=t,this._styleRepository=a,this._zoom=r,this._currentLayerCursor=0,this._currentSymbolCursor=0,this._styleProps=new Map,this._allNeededMatrices=new Map,this._gridIndex=new Y.a(n,i,Z.a),this._si=Math.sin(Math.PI*o/180),this._co=Math.cos(Math.PI*o/180);var s,c=Object(I.a)(t);try{for(c.s();!(s=c.n()).done;){var u,f=s.value,v=Object(I.a)(f.symbols);try{for(v.s();!(u=v.n()).done;){var d=u.value;this._allNeededMatrices.has(d.tile)||this._allNeededMatrices.set(d.tile,Object(b.a)(d.tile.transforms.tileUnitsToPixels))}}catch(_){v.e(_)}finally{v.f()}}}catch(_){c.e(_)}finally{c.f()}}return Object(s.a)(e,[{key:"work",value:function(e){var t=this._gridIndex;function n(e){for(var n=e.xScreen+e.dxScreen,i=e.yScreen+e.dyScreen,a=n+e.width,r=i+e.height,l=t.getCellSpan(n,i,a,r),s=Object(o.a)(l,4),c=s[0],u=s[1],f=s[2],v=s[3],d=u;d<=v;d++)for(var _=c;_<=f;_++){var m,h=t.cells[d][_],p=Object(I.a)(h);try{for(p.s();!(m=p.n()).done;){var g=m.value,y=g.xScreen+g.dxScreen,b=g.yScreen+g.dyScreen,x=y+g.width,S=b+g.height;if(!(a<y||n>x||r<b||i>S))return!0}}catch(C){p.e(C)}finally{p.f()}}return!1}for(var i=performance.now();this._currentLayerCursor<this._symbols.length;this._currentLayerCursor++,this._currentSymbolCursor=0)for(var a=this._symbols[this._currentLayerCursor],r=this._getProperties(a.styleLayerUID);this._currentSymbolCursor<a.symbols.length;this._currentSymbolCursor++){if(this._currentSymbolCursor%100==99&&performance.now()-i>e)return!1;var l=a.symbols[this._currentSymbolCursor];if(l.unique.show){X(l,this._si,this._co,r,this._allNeededMatrices.get(l.tile),this._zoom);var s=l.unique;if(s.show){var c,u=r.iconAllowOverlap,f=r.iconIgnorePlacement,v=r.textAllowOverlap,d=r.textIgnorePlacement,_=Object(I.a)(l.colliders);try{for(_.s();!(c=_.n()).done;){var m=c.value;if(m.enabled){var h=s.parts[m.partIndex];h.show&&!(m.partIndex?v:u)&&n(m)&&(m.hard?s.show=!1:h.show=!1)}}}catch(M){_.e(M)}finally{_.f()}if(s.show){var p,g=Object(I.a)(l.colliders);try{for(g.s();!(p=g.n()).done;){var y=p.value;if(y.enabled&&(!(y.partIndex?d:f)&&s.parts[y.partIndex].show))for(var b=y.xScreen+y.dxScreen,x=y.yScreen+y.dyScreen,S=b+y.width,C=x+y.height,O=this._gridIndex.getCellSpan(b,x,S,C),T=Object(o.a)(O,4),w=T[0],D=T[1],P=T[2],z=T[3],A=D;A<=z;A++)for(var E=w;E<=P;E++)this._gridIndex.cells[A][E].push(y)}}catch(M){g.e(M)}finally{g.f()}}}}}return!0}},{key:"_getProperties",value:function(e){var t=this._styleProps.get(e);if(t)return t;var n=this._zoom,i=this._styleRepository.getStyleLayerByUID(e),a=0!==i.getLayoutValue("symbol-placement",n),r=i.getLayoutValue("icon-rotation-alignment",n);2===r&&(r=a?0:1);var o=i.getLayoutValue("text-rotation-alignment",n);2===o&&(o=a?0:1);var l=i.getPaintValue("icon-translate",n),s=i.getPaintValue("icon-translate-anchor",n),c=i.getPaintValue("text-translate",n),u=i.getPaintValue("text-translate-anchor",n),f={iconAllowOverlap:i.getLayoutValue("icon-allow-overlap",n),iconIgnorePlacement:i.getLayoutValue("icon-ignore-placement",n),textAllowOverlap:i.getLayoutValue("text-allow-overlap",n),textIgnorePlacement:i.getLayoutValue("text-ignore-placement",n),iconRotationAlignment:r,textRotationAlignment:o,iconTranslateAnchor:s,iconTranslate:l,textTranslateAnchor:u,textTranslate:c};return this._styleProps.set(e,f),f}}]),e}();function J(e,t){if(e.priority-t.priority)return e.priority-t.priority;var n=e.tile.key,i=t.tile.key;return n.world-i.world?n.world-i.world:n.level-i.level?n.level-i.level:n.row-i.row?n.row-i.row:n.col-i.col?n.col-i.col:e.xTile-t.xTile?e.xTile-t.xTile:e.yTile-t.yTile}var Q=function(){function e(t,n,i,a,r,o){Object(l.a)(this,e),this._visibleTiles=t,this._symbolRepository=n,this._createCollisionJob=i,this._assignTileSymbolsOpacity=a,this._symbolLayerSorter=r,this._isLayerVisible=o,this._selectionJob=null,this._selectionJobCompleted=!1,this._collisionJob=null,this._collisionJobCompleted=!1,this._opacityJob=null,this._opacityJobCompleted=!1,this._running=!0}return Object(s.a)(e,[{key:"running",get:function(){return this._running}},{key:"setScreenSize",value:function(e,t){this._screenWidth===e&&this._screenHeight===t||this.restart(),this._screenWidth=e,this._screenHeight=t}},{key:"restart",value:function(){this._selectionJob=null,this._selectionJobCompleted=!1,this._collisionJob=null,this._collisionJobCompleted=!1,this._opacityJob=null,this._opacityJobCompleted=!1,this._running=!0}},{key:"continue",value:function(e){if(this._selectionJob||(this._selectionJob=this._createSelectionJob()),!this._selectionJobCompleted){var t=performance.now();if(!this._selectionJob.work(e))return!1;if(this._selectionJobCompleted=!0,0===(e=Math.max(0,e-(performance.now()-t))))return!1}if(this._collisionJob||(this._collisionJob=this._createCollisionJob(this._selectionJob.sortedSymbols,this._screenWidth,this._screenHeight)),!this._collisionJobCompleted){var n=performance.now();if(!this._collisionJob.work(e))return!1;if(this._collisionJobCompleted=!0,0===(e=Math.max(0,e-(performance.now()-n))))return!1}if(this._opacityJob||(this._opacityJob=this._createOpacityJob()),!this._opacityJobCompleted){var i=performance.now();if(!this._opacityJob.work(e))return!1;if(this._opacityJobCompleted=!0,0===(e=Math.max(0,e-(performance.now()-i))))return!1}return this._running=!1,!0}},{key:"_createSelectionJob",value:function(){for(var e=this._symbolRepository.uniqueSymbols,t=0;t<e.length;t++)for(var n=e[t],i=0;i<n.uniqueSymbols.length;i++){var a,r=n.uniqueSymbols[i],o=Object(I.a)(r.tileSymbols);try{for(o.s();!(a=o.n()).done;){a.value.selectedForRendering=!1}}catch(v){o.e(v)}finally{o.f()}}var l=[],s=0,c=0,u=this._isLayerVisible;var f=this._symbolLayerSorter;return{work:function(t){for(var n,i=performance.now();c<e.length;c++,s=0){var a=e[c],r=a.styleLayerUID;if(u(r)){l[c]=l[c]||{styleLayerUID:r,symbols:[]};for(var o=l[c];s<a.uniqueSymbols.length;s++){if(n=a.uniqueSymbols[s],s%100==99&&performance.now()-i>t)return!1;var f,d=null,_=!1,m=!1,h=Object(I.a)(n.tileSymbols);try{for(h.s();!(f=h.n()).done;){var p=f.value;if(!m||!_){var g=p.tile;(!d||g.isCoverage||g.neededForCoverage&&!_)&&(d=p,(g.neededForCoverage||g.isCoverage)&&(m=!0),g.isCoverage&&(_=!0))}}}catch(v){h.e(v)}finally{h.f()}if(d.selectedForRendering=!0,m){o.symbols.push(d),n.show=!0;var y,b=Object(I.a)(n.parts);try{for(b.s();!(y=b.n()).done;){y.value.show=!0}}catch(v){b.e(v)}finally{b.f()}}else n.show=!1}}else l[c]||(l[c]={styleLayerUID:r,symbols:[]})}var x,S=Object(I.a)(l);try{for(S.s();!(x=S.n()).done;){x.value.symbols.sort(J)}}catch(v){S.e(v)}finally{S.f()}return!0},get sortedSymbols(){return l.sort(f)}}}},{key:"_createOpacityJob",value:function(){var e=this._assignTileSymbolsOpacity,t=this._visibleTiles,n=0;function i(t,n){var a,r=t.symbols,l=Object(I.a)(r);try{for(l.s();!(a=l.n()).done;){var s=Object(o.a)(a.value,2);s[0];$(s[1],n)}}catch(f){l.e(f)}finally{l.f()}e(t,n);var c,u=Object(I.a)(t.childrenTiles);try{for(u.s();!(c=u.n()).done;){i(c.value,n)}}catch(f){u.e(f)}finally{u.f()}}return{work:function(e){for(var a=performance.now();n<t.length;n++){if(performance.now()-a>e)return!1;var r=t[n];Object(v.k)(r.parentTile)||i(r,performance.now())}return!0}}}}]),e}();function $(e,t){var n,i=Object(I.a)(e);try{for(i.s();!(n=i.n()).done;){var a,r=n.value.unique,o=Object(I.a)(r.parts);try{for(o.s();!(a=o.n()).done;){var l=a.value,s=l.targetOpacity>.5?1:-1;l.startOpacity+=s*((t-l.startTime)/Z.c),l.startOpacity=Math.min(Math.max(l.startOpacity,0),1),l.startTime=t,l.targetOpacity=r.show&&l.show?1:0}}catch(c){o.e(c)}finally{o.f()}}}catch(c){i.e(c)}finally{i.f()}}var ee=function(){function e(t,n,i){Object(l.a)(this,e),this.tileCoordRange=t,this._visibleTiles=n,this._createUnique=i,this._tiles=new Map,this._uniqueSymbolsReferences=new Map}return Object(s.a)(e,[{key:"uniqueSymbols",get:function(){return Object(v.j)(this._uniqueSymbolLayerArray)&&(this._uniqueSymbolLayerArray=this._createUniqueSymbolLayerArray()),this._uniqueSymbolLayerArray}},{key:"add",value:function(e,t){this._uniqueSymbolLayerArray=null;var n=this._tiles.get(e.id);n||(n={symbols:new Map},this._tiles.set(e.id,n));var i=new Map;if(t){var a,r=Object(I.a)(t);try{for(r.s();!(a=r.n()).done;){var l=a.value;n.symbols.has(l)&&(i.set(l,n.symbols.get(l)),n.symbols.delete(l))}}catch(T){r.e(T)}finally{r.f()}}else{var s,c=Object(I.a)(e.layerData);try{for(c.s();!(s=c.n()).done;){var u=Object(o.a)(s.value,2),f=u[0];u[1];n.symbols.has(f)&&(i.set(f,n.symbols.get(f)),n.symbols.delete(f))}}catch(T){c.e(T)}finally{c.f()}}this._removeSymbols(i);var v,d=e.symbols,_=new Map,m=Object(I.a)(d);try{for(m.s();!(v=m.n()).done;){var h=Object(o.a)(v.value,2),p=h[0],g=h[1],y=g.length;if(y>=32){var b=this.tileCoordRange;do{b/=2,y/=4}while(y>8&&b>64);var x=new Y.a(this.tileCoordRange,this.tileCoordRange,b);_.set(p,{flat:g,index:x}),n.symbols.set(p,{flat:g,index:x});var S,C=Object(I.a)(g);try{for(C.s();!(S=C.n()).done;){var O=S.value;x.getCell(O.xTile,O.yTile).push(O)}}catch(T){C.e(T)}finally{C.f()}}else _.set(p,{flat:g}),n.symbols.set(p,{flat:g})}}catch(T){m.e(T)}finally{m.f()}this._addSymbols(e.key,d)}},{key:"deleteStyleLayers",value:function(e){this._uniqueSymbolLayerArray=null;var t,n=Object(I.a)(this._tiles);try{for(n.s();!(t=n.n()).done;){var i,a=Object(o.a)(t.value,2),r=a[0],l=a[1],s=new Map,c=Object(I.a)(e);try{for(c.s();!(i=c.n()).done;){var u=i.value;l.symbols.has(u)&&(s.set(u,l.symbols.get(u)),l.symbols.delete(u))}}catch(f){c.e(f)}finally{c.f()}this._removeSymbols(s),0===l.symbols.size&&this._tiles.delete(r)}}catch(f){n.e(f)}finally{n.f()}}},{key:"removeTile",value:function(e){this._uniqueSymbolLayerArray=null;var t=this._tiles.get(e.id);if(t){var n,i=new Map,a=Object(I.a)(e.symbols);try{for(a.s();!(n=a.n()).done;){var r=Object(o.a)(n.value,2),l=r[0];r[1];t.symbols.has(l)&&(i.set(l,t.symbols.get(l)),t.symbols.delete(l))}}catch(s){a.e(s)}finally{a.f()}this._removeSymbols(i),0===t.symbols.size&&this._tiles.delete(e.id)}}},{key:"_removeSymbols",value:function(e){var t,n=Object(I.a)(e);try{for(n.s();!(t=n.n()).done;){var i,a=Object(o.a)(t.value,2),r=a[0],l=a[1].flat,s=Object(I.a)(l);try{for(s.s();!(i=s.n()).done;){for(var c=i.value,u=c.unique,f=u.tileSymbols,v=f.length-1,d=0;d<v;d++)if(f[d]===c){f[d]=f[v];break}if(f.length=v,0===v){var _=this._uniqueSymbolsReferences.get(r);_.delete(u),0===_.size&&this._uniqueSymbolsReferences.delete(r)}c.unique=null}}catch(m){s.e(m)}finally{s.f()}}}catch(m){n.e(m)}finally{n.f()}}},{key:"_addSymbols",value:function(e,t){if(0!==t.size){var n,i=this._visibleTiles,a=Object(I.a)(i);try{for(a.s();!(n=a.n()).done;){var r=n.value;r.parentTile||r.key.world!==e.world||r.key.level===e.level&&!r.key.equals(e)||this._matchSymbols(r,e,t)}}catch(g){a.e(g)}finally{a.f()}var l,s=Object(I.a)(t);try{for(s.s();!(l=s.n()).done;){var c,u=Object(o.a)(l.value,2),f=u[0],d=u[1],_=Object(I.a)(d);try{for(_.s();!(c=_.n()).done;){var m=c.value;if(Object(v.j)(m.unique)){var h=this._createUnique();m.unique=h,h.tileSymbols.push(m);var p=this._uniqueSymbolsReferences.get(f);p||(p=new Set,this._uniqueSymbolsReferences.set(f,p)),p.add(h)}}}catch(g){_.e(g)}finally{_.f()}}}catch(g){s.e(g)}finally{s.f()}}}},{key:"_matchSymbols",value:function(e,t,n){if(e.key.level>t.level){var i=e.key.level-t.level;if(e.key.row>>i!==t.row||e.key.col>>i!==t.col)return}if(t.level>e.key.level){var a=t.level-e.key.level;if(t.row>>a!==e.key.row||t.col>>a!==e.key.col)return}if(t.equals(e.key)){var r,l=Object(I.a)(e.childrenTiles);try{for(l.s();!(r=l.n()).done;){var s=r.value;this._matchSymbols(s,t,n)}}catch(B){l.e(B)}finally{l.f()}}else{var c,u=new Map,f=Object(I.a)(n);try{for(f.s();!(c=f.n()).done;){var d,_=Object(o.a)(c.value,2),m=_[0],h=_[1],p=[],g=Object(I.a)(h);try{for(g.s();!(d=g.n()).done;){var y=d.value,b=Object(Y.c)(this.tileCoordRange,y.xTile,t.level,t.col,e.key.level,e.key.col),x=Object(Y.c)(this.tileCoordRange,y.yTile,t.level,t.row,e.key.level,e.key.row);b>=0&&b<this.tileCoordRange&&x>=0&&x<this.tileCoordRange&&p.push({symbol:y,xTransformed:b,yTransformed:x})}}catch(B){g.e(B)}finally{g.f()}var S=[],C=e.key.level<t.level?1:1<<e.key.level-t.level,O=this._tiles.get(e.id).symbols.get(m);if(O){var T,w=O.flat,D=Object(I.a)(p);try{for(D.s();!(T=D.n()).done;){var P,z=T.value,A=!1,E=z.xTransformed,M=z.yTransformed;P=Object(v.k)(O.index)?O.index.getCell(E,M):w;var V,L=z.symbol,R=L.hash,k=Object(I.a)(P);try{for(k.s();!(V=k.n()).done;){var j=V.value;if(R===j.hash&&Math.abs(E-j.xTile)<=C&&Math.abs(M-j.yTile)<=C){var F=j.unique;L.unique=F,F.tileSymbols.push(L),A=!0;break}}}catch(B){k.e(B)}finally{k.f()}A||S.push(L)}}catch(B){D.e(B)}finally{D.f()}}S.length>0&&u.set(m,S)}}catch(B){f.e(B)}finally{f.f()}var U,N=Object(I.a)(e.childrenTiles);try{for(N.s();!(U=N.n()).done;){var H=U.value;this._matchSymbols(H,t,u)}}catch(B){N.e(B)}finally{N.f()}}}},{key:"_createUniqueSymbolLayerArray",value:function(){var e,t,n=this._uniqueSymbolsReferences,i=new Array(n.size),a=0,r=Object(I.a)(n);try{for(r.s();!(t=r.n()).done;){var l=Object(o.a)(t.value,2),s=l[0],c=l[1],u=new Array(c.size);e=0;var f,v=Object(I.a)(c);try{for(v.s();!(f=v.n()).done;){var d=f.value;u[e++]=d}}catch(_){v.e(_)}finally{v.f()}i[a]={styleLayerUID:s,uniqueSymbols:u},a++}}catch(_){r.e(_)}finally{r.f()}return i}}]),e}();function te(e,t){var n=[],i=new ee(4096,n,(function(){var e=new q.b;return e.show=!1,e.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),e.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),e})),a=new Q(n,i,(function(t,n,i){return new K(t,n,i,e.styleRepository,e.key.level,0)}),(function(e,t){Object(Y.d)(e,t,!1)}),(function(){return 0}),(function(e){var n=t.getStyleLayerByUID(e).getLayoutProperty("visibility");return!n||1!==n.getValue()}));n.push(e),i.add(e),a.setScreenSize(512,512),a.continue(1/0)}var ne=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(e,i,a,r,o){var s;return Object(l.a)(this,n),(s=t.call(this,e,i,a))._memCache=r,s._loader=o,s._ongoingTileRequests=new Map,s._ongoingRequestToController=new Map,s}return Object(s.a)(n,[{key:"destroy",value:function(){this._ongoingRequestToController.forEach((function(e){return e.abort()})),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}},{key:"getVectorTile",value:function(){var e=Object(r.a)(a.a.mark((function e(t,n,i,r){var o,l,s,c;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=new H.a(t,n,i,0),l=this._memCache.get(o.id),!Object(v.k)(l)){e.next=4;break}return e.abrupt("return",(l.retain(),l));case 4:return e.next=6,this._getVectorTileData(o);case 6:if(s=e.sent,Object(d.x)(r),this._vectorTileLayer){e.next=9;break}return e.abrupt("return",null);case 9:if(l=this._memCache.get(o.id),!Object(v.k)(l)){e.next=11;break}return e.abrupt("return",(l.retain(),l));case 11:return c=this._vectorTileLayer.tileInfo.getTileBounds(Object(x.l)(),o),e.abrupt("return",(l=new S.a(o,c[0],c[3],512,512,this._styleRepository,this._memCache),Object(v.k)(s)&&s.tileData?(l.setData(s.tileData),l.retain(),this._memCache.put(o.id,l,l.memoryUsage*l.referenced,y.a)):l.setData(null),l.neededForCoverage=!0,l.transforms.tileUnitsToPixels=Object(b.c)(1/8,0,0,0,1/8,0,0,0,1),te(l,this._styleRepository),l));case 13:case"end":return e.stop()}}),e,this)})));return function(t,n,i,a){return e.apply(this,arguments)}}()},{key:"_getVectorTileData",value:function(e){var t=this,n=e.id;if(this._ongoingTileRequests.has(n))return this._ongoingTileRequests.get(n);var i=new AbortController,a={signal:i.signal},r=this._getParsedVectorTileData(e,a).then((function(e){return t._ongoingTileRequests.delete(n),t._ongoingRequestToController.delete(n),e})).catch((function(){return t._ongoingTileRequests.delete(n),t._ongoingRequestToController.delete(n),null}));return this._ongoingTileRequests.set(n,r),this._ongoingRequestToController.set(n,i),r}},{key:"_getParsedVectorTileData",value:function(e,t){var n=this;return this.fetchTileData(e,t).then((function(i){return n.parseTileData({key:e,data:i},t)}))}},{key:"request",value:function(e,t){return this._loader.request(e,"binary",t)}}]),n}(W),ie=n(800),ae=function(){function e(){Object(l.a)(this,e),this.name=this.constructor.name||"UnnamedBrush"}return Object(s.a)(e,[{key:"prepareState",value:function(e,t,n){}},{key:"draw",value:function(e,t,n){}},{key:"drawMany",value:function(e,t,n){var i,a=Object(I.a)(t);try{for(a.s();!(i=a.n()).done;){var r=i.value;this.draw(e,r,n)}}catch(o){a.e(o)}finally{a.f()}}}]),e}(),re=n(229),oe=(n(823),function(){function e(t){Object(l.a)(this,e),this.readFile=t}return Object(s.a)(e,[{key:"resolveIncludes",value:function(e){return this.resolve(e)}},{key:"resolve",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(n.has(e))return n.get(e);var i=this.read(e);if(!i)throw new Error("cannot find shader file ".concat(e));for(var a=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm,r=a.exec(i),o=[];null!=r;)o.push({path:r[1],start:r.index,length:r[0].length}),r=a.exec(i);var l=0,s="";return o.forEach((function(e){s+=i.slice(l,e.start),s+=n.has(e.path)?"":t.resolve(e.path,n),l=e.start+e.length})),s+=i.slice(l),n.set(e,s),s}},{key:"read",value:function(e){return this.readFile(e)}}]),e}()),le={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\nvividLight(Cb.g, Cs.g),\nvividLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec4 id) {\nhighp vec4 texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256 + int(texel.a) * 256 * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec4 getAttributeData0(in highp vec4 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec4 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec4 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec4 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.0000001;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;",fill:{"common.glsl":"#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\n#endif\n#ifdef DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying highp float v_flags;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#ifdef DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\nvoid main() {\n#ifdef ID\ngl_FragColor = v_id;\n#elif defined(PATTERN)\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\ngl_FragColor = v_opacity * v_color * color;\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\ngl_FragColor = preEffectColor;\n#else\ngl_FragColor = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\ngl_FragColor.a = 1.0;\n#endif\n}","fill.vert":"precision highp float;\n#ifdef DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 a_aux3 = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_tlbr;\nattribute vec4 a_aux1;\nattribute vec2 a_aux2;\nattribute vec4 a_aux3;\nattribute vec2 a_zoomRange;\n#endif\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#ifdef DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_aux3.a;\nv_color     = getColor(a_color, a_bitSet, 0);\nv_opacity   = getOpacity();\nv_id        = norm(a_id);\nv_pos       = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\nv_flags     = getFilterFlags();\n#ifdef PATTERN\nvec2 aux2 = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_aux2;\nfloat width = u_pixelRatio * u_zoomFactor * a_aux1.x * aux2.x;\nfloat height = u_pixelRatio * u_zoomFactor * a_aux1.y * aux2.y;\nfloat angle = C_256_TO_RAD * a_aux3.z;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\n0,            0,             1);\nvec2 symbolOffset = (a_aux1.zw - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_tlbr = a_tlbr / u_mosaicSize.xyxy;\n#elif defined(DOT_DENSITY)\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\ngl_Position = vec4(clip(v_color, v_pos, v_flags, a_zoomRange), 1.0);\n}"},icon:{"common.glsl":"uniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying highp float v_filters;\nvarying lowp float v_opacity;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/icon/common.glsl>\nuniform lowp sampler2D u_texture;\nvoid main()\n{\nvec2 v_size = v_sizeTex.xy;\nvec2 v_tex  = v_sizeTex.zw;\n#ifdef SDF\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\ngl_FragColor = v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nelse {\ngl_FragColor = v_opacity * fillPixelColor;\n}\n#else\nlowp vec4 texColor = texture2D(u_texture, v_tex);\ngl_FragColor = v_opacity * texColor * v_color;\n#endif\n#ifdef HIGHLIGHT\ngl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\n#ifdef VV_SIZE\nfloat r = getSize(baseSize.y) / referenceSize;\nbaseSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, 3);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn baseSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, 0);\nvec3  offset       = getRotation() * vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nvec2 v_tex      = a_texCoords / u_mosaicSize;\nv_color    = getColor(a_color, a_bitSet, 1);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_filters  = getFilterFlags();\nv_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\nv_sizeTex  = vec4(v_size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, 2);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\ngl_Position = vec4(clip(v_color, v_pos, v_filters, a_zoomRange), 1.0);\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\ngl_Position = vec4(applyFilterLabels(v_color, v_pos, getFilterFlags()), 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\nvarying highp vec3 v_pos;\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/line/common.glsl>\nuniform lowp float u_blur;\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#ifdef SDF\nconst float sdfPatternHalfWidth = 15.5;\nuniform mediump float u_antialiasing;\n#endif\nvoid main()\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(v_lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(v_normal) * v_lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (v_lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\n#if defined(SDF) && !defined(HIGHLIGHT)\nmediump float lineHalfWidth = v_lineHalfWidth;\nmediump float lineWidthRatio = max(lineHalfWidth - 0.55 * u_antialiasing, 0.25) / sdfPatternHalfWidth;\nmediump float relativeTexX = fract(u_pixelRatio * v_accumulatedDistance * 0.5 / (lineWidthRatio * v_patternSize.x));\nmediump float relativeTexY = 0.5 + 0.25 * v_normal.y;\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * lineHalfWidth;\nlowp vec4 fillPixelColor = v_opacity * alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\ngl_FragColor = fillPixelColor;\n#elif defined(PATTERN) && !defined(HIGHLIGHT)\nmediump float lineHalfWidth = v_lineHalfWidth;\nmediump float adjustedPatternWidth = v_patternSize.x * 2.0 * lineHalfWidth / v_patternSize.y;\nmediump float relativeTexX = fract(u_pixelRatio * v_accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.5 * v_normal.y;\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexY, relativeTexX));\nlowp vec4 color = texture2D(u_texture, texCoord);\ngl_FragColor = v_opacity * alpha * v_color * color;\n#else\ngl_FragColor = v_opacity * alpha * v_color;\n#endif\n#ifdef HIGHLIGHT\ngl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/line/common.glsl>\nconst float SCALE = 1.0 / 31.0;\nconst float WIDTH_SCALE = 1.0 / 1024.0;\nfloat getBaseLineHalfWidth(in float in_lineHalfWidth) {\n#ifdef VV_SIZE\nfloat referenceHalfWidth = a_aux.x * WIDTH_SCALE;\nfloat lineWidth = 2.0 * in_lineHalfWidth;\nreturn 0.5 * (in_lineHalfWidth / referenceHalfWidth) * getSize(lineWidth);\n#else\nreturn in_lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset * SCALE;\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet          = a_segmentDirection.w;\nfloat a_accumulatedDist = a_accumulatedDistanceAndHalfWidth.x;\nfloat a_lineHalfWidth   = a_accumulatedDistanceAndHalfWidth.y * WIDTH_SCALE;\nfloat aa                = 0.5 * u_antialiasing;\nvec2  a_offset          = a_offsetAndNormal.xy;\nfloat baseWidth = getBaseLineHalfWidth(a_lineHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(a_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + offset;\nv_color         = getColor(a_color, a_bitSet, 0);\nv_opacity       = getOpacity();\nv_lineHalfWidth = halfWidth;\nv_id            = norm(a_id);\nv_normal        = a_offsetAndNormal.zw * SCALE;\nv_pos           = vec3(pos.xy, z);\n#ifdef PATTERN\nv_tlbr          = a_tlbr / u_mosaicSize.xyxy;\nv_patternSize   = vec2(a_tlbr.z - a_tlbr.x, a_tlbr.w - a_tlbr.y);\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = a_accumulatedDist * u_zoomFactor + dot(SCALE * a_segmentDirection.xy, dist);\n#endif\ngl_Position = vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n}"},text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec4 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\nvoid main()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\ngl_FragColor = alpha * v_color * v_opacity;\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(in float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nreturn getSize(baseSize);\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_fontSize, a_referenceSize);\nfloat scaleFactor   = fontSize / a_fontSize;\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(scaleFactor * a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec4 unpackDisplayIdTexel(in highp vec4 bitset) {\nfloat isAggregate = getBit(bitset.a, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec4(bitset.rgba) - vec4(0.0, 0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\nattribute vec2 a_pos;\nattribute highp vec4 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef OES_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}\nvec3 applyFilterLabels(inout vec4 color, inout vec3 pos, in float filterFlags) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifndef OUTSIDE_LABELS_VISIBLE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#endif\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\ngl_FragColor = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nvarying vec2 v_uv;\nvoid main() {\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"},"drop-shadow.vert":"precision mediump float;\nattribute vec2 a_position;\nuniform highp mat3 u_displayViewMat3;\nuniform highp vec2 u_offset;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_offset, 0.0);\ngl_Position = vec4(a_position, 0.0, 1.0) + vec4(offset, 0.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\nfloat alpha = u_opacity * color.a;\ngl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_isFloatTexture;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec2 axy = vec2(-1.0, -1.0);\nvec2 bxy = vec2(0.0, -1.0);\nvec2 cxy = vec2(1.0, -1.0);\nvec2 dxy = vec2(-1.0, 0.0);\nvec2 fxy = vec2(1.0, 0.0);\nvec2 gxy = vec2(-1.0, 1.0);\nvec2 hxy = vec2(0.0, 1.0);\nvec2 ixy = vec2(1.0, 1.0);\nvec2 onePixel = 1.0 / u_srcImageSize;\nif (pixelLocation.s < onePixel.s) {\naxy[0] = 1.0;\ndxy[0] = 1.0;\ngxy[0] = 1.0;\n}\nif (pixelLocation.t < onePixel.t) {\naxy[1] = 1.0;\nbxy[1] = 1.0;\ncxy[1] = 1.0;\n}\nif (pixelLocation.s > 1.0 - onePixel.s) {\ncxy[0] = -1.0;\nfxy[0] = -1.0;\nixy[0] = -1.0;\n}\nif (pixelLocation.t > 1.0 - onePixel.t) {\ngxy[1] = -1.0;\nhxy[1] = -1.0;\nixy[1] = -1.0;\n}\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\nvec4 ve = texture2D(u_image, pixelLocation);\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifdef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nvoid main() {\ngl_Position = vec4(a_pos, 0.0, 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};var se=new oe((function(e){var t=le;return e.split("/").forEach((function(e){t&&(t=t[e])})),t}));function ce(e){return se.resolveIncludes(e)}ce("background/background.vert"),ce("background/background.frag"),new Map([["a_pos",0]]);var ue=n(356);function fe(e){var t="";for(var n in e){var i=e[n];if("boolean"==typeof i)i&&(t+="#define ".concat(n,"\n"));else if("number"==typeof i)t+="#define ".concat(n," ").concat(i.toFixed(),"\n");else if("object"==typeof i){var a=i.options,r=0;for(var o in a)t+="#define ".concat(a[o]," ").concat((r++).toFixed(),"\n");t+="#define ".concat(n," ").concat(a[i.value],"\n")}}return t}ce("tileInfo/tileInfo.vert"),ce("tileInfo/tileInfo.frag"),new Map([["a_pos",0]]);var ve=n(21),de=n(802),_e=n(805),me=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(l.a)(this,n),(e=t.apply(this,arguments))._color=Object(re.c)(1,0,0,1),e._patternMatrix=Object(b.b)(),e._programOptions={id:!1,pattern:!1},e}return Object(s.a)(n,[{key:"dispose",value:function(){this._vao&&(this._vao.dispose(),this._vao=null)}},{key:"drawMany",value:function(e,t){var n=e.context,i=e.painter,a=e.styleLayerUID;this._loadWGLResources(e);var r,o,l=e.displayLevel,s=e.styleLayer,c=s.backgroundMaterial,u=i.vectorTilesMaterialManager,f=s.getPaintValue("background-color",l),d=s.getPaintValue("background-opacity",l),_=s.getPaintValue("background-pattern",l),m=void 0!==_,h=f[3]*d,p=1|window.devicePixelRatio,g=e.spriteMosaic,y=p>ie.w?2:1,b=e.drawPhase===de.b.HITTEST,x=this._programOptions;x.id=b,x.pattern=m;var S=u.getMaterialProgram(n,c,x);if(n.bindVAO(this._vao),n.useProgram(S),m){var C=g.getMosaicItemPosition(_,!0);if(Object(v.k)(C)){var O=C.tl,T=C.br,w=C.page;r=T[0]-O[0],o=T[1]-O[1];var D=g.getPageSize(w);Object(v.k)(D)&&(g.bind(n,9729,w,ie.y),S.setUniform4f("u_tlbr",O[0],O[1],T[0],T[1]),S.setUniform2fv("u_mosaicSize",D),S.setUniform1i("u_texture",ie.y))}S.setUniform1f("u_opacity",d)}else this._color[0]=h*f[0],this._color[1]=h*f[1],this._color[2]=h*f[2],this._color[3]=h,S.setUniform4fv("u_color",this._color);if(S.setUniform1f("u_depth",s.z||0),b){var P=Object(_e.c)(a+1);S.setUniform4fv("u_id",P)}var z,A=Object(I.a)(t);try{for(A.s();!(z=A.n()).done;){var E=z.value;if(S.setUniform1f("u_coord_range",E.rangeX),S.setUniformMatrix3fv("u_dvsMat3",E.transforms.dvs),m){var M=Math.max(Math.pow(2,Math.round(l)-E.key.level),1),V=y*E.width*M,L=V/Object(ve.q)(r),R=V/Object(ve.q)(o);this._patternMatrix[0]=L,this._patternMatrix[4]=R,S.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(514,E.stencilRef,255),n.drawArrays(5,0,4)}}catch(k){A.e(k)}finally{A.f()}}},{key:"_loadWGLResources",value:function(e){if(!this._vao){var t=e.context,n=e.styleLayer.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),a=D.a.createVertex(t,35044,i),r=new z.a(t,n.getAttributeLocations(),n.getLayoutInfo(),{geometry:a});this._vao=r}}}]),n}(ae),he=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(l.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1},e}return Object(s.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,i=e.displayLevel,a=e.requiredLevel,r=e.state,o=e.drawPhase,l=e.painter,s=e.spriteMosaic,c=e.styleLayerUID;if(t.some((function(e){var t,n;return null!=(t=null==(n=e.layerData.get(c))?void 0:n.circleIndexCount)&&t}))){var u=e.styleLayer,f=u.circleMaterial,d=l.vectorTilesMaterialManager,_=u.getPaintValue("circle-translate",i),m=u.getPaintValue("circle-translate-anchor",i),h=o===de.b.HITTEST,p=this._programOptions;p.id=h;var g=d.getMaterialProgram(n,f,p);n.useProgram(g),g.setUniformMatrix3fv("u_displayMat3",1===m?r.displayMat3:r.displayViewMat3),g.setUniform2fv("u_circleTranslation",_),g.setUniform1f("u_depth",u.z),g.setUniform1f("u_antialiasingWidth",1.2);var y=-1;if(h){var b=Object(_e.c)(c+1);g.setUniform4fv("u_id",b)}var x,S=Object(I.a)(t);try{for(S.s();!(x=S.n()).done;){var C=x.value;if(C.layerData.has(c)){C.key.level!==y&&(y=C.key.level,f.setDataUniforms(g,i,u,y,s));var O=C.layerData.get(c);if(O.circleIndexCount){O.prepareForRendering(n);var T=O.circleVertexArrayObject;Object(v.j)(T)||(n.bindVAO(T),g.setUniformMatrix3fv("u_dvsMat3",C.transforms.dvs),a!==C.key.level?n.setStencilFunction(514,C.stencilRef,255):n.setStencilFunction(516,255,255),n.drawElements(4,O.circleIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*O.circleIndexStart),C.triangleCount+=O.circleIndexCount/3)}}}}catch(w){S.e(w)}finally{S.f()}}}}]),n}(ae),pe=1/65536,ge=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(l.a)(this,n),(e=t.apply(this,arguments))._fillProgramOptions={id:!1,pattern:!1},e._outlineProgramOptions={id:!1},e}return Object(s.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,i=e.displayLevel,a=e.drawPhase,r=e.renderPass,o=e.spriteMosaic,l=e.styleLayerUID,s=!1,c=Object(I.a)(t);try{for(c.s();!(n=c.n()).done;){var u=n.value;if(u.layerData.has(l)){var f=u.layerData.get(l);if(f.fillIndexCount>0||f.outlineIndexCount>0){s=!0;break}}}}catch(P){c.e(P)}finally{c.f()}if(s){var v,d=e.styleLayer,_=d.getPaintProperty("fill-pattern"),m=void 0!==_,h=m&&_.isDataDriven;if(m&&!h){var p=_.getValue(i);v=o.getMosaicItemPosition(p,!0)}var g=!m&&d.getPaintValue("fill-antialias",i),y=!0,b=1;if(!m){var x=d.getPaintProperty("fill-color"),S=d.getPaintProperty("fill-opacity");if(!(null!=x&&x.isDataDriven||null!=S&&S.isDataDriven)){var C=d.getPaintValue("fill-color",i);(b=d.getPaintValue("fill-opacity",i)*C[3])>=1&&(y=!1)}}if(!y||"opaque"!==r){var O;a===de.b.HITTEST&&(O=Object(_e.c)(l+1));var T=d.getPaintValue("fill-translate",i),w=d.getPaintValue("fill-translate-anchor",i);(y||"translucent"!==r)&&this._drawFill(e,l,d,t,T,w,m,v,h,O);var D=!d.hasDataDrivenOutlineColor&&d.outlineUsesFillColor&&b<1;g&&"opaque"!==r&&!D&&this._drawOutline(e,l,d,t,T,w,O)}}}},{key:"_drawFill",value:function(e,t,n,i,a,r,l,s,c,u){if(!l||c||!Object(v.j)(s)){var f=e.context,d=e.displayLevel,_=e.state,m=e.drawPhase,h=e.painter,p=e.pixelRatio,g=e.spriteMosaic,y=n.fillMaterial,b=h.vectorTilesMaterialManager,x=p>ie.w?2:1,S=m===de.b.HITTEST,C=this._fillProgramOptions;C.id=S,C.pattern=l;var O=b.getMaterialProgram(f,y,C);if(f.useProgram(O),Object(v.k)(s)){var T=s.page,w=g.getPageSize(T);Object(v.k)(w)&&(g.bind(f,9729,T,ie.y),O.setUniform2fv("u_mosaicSize",w),O.setUniform1i("u_texture",ie.y))}O.setUniformMatrix3fv("u_displayMat3",1===r?_.displayMat3:_.displayViewMat3),O.setUniform2fv("u_fillTranslation",a),O.setUniform1f("u_depth",n.z+pe),S&&O.setUniform4fv("u_id",u);var D,P=-1,z=Object(I.a)(i);try{for(z.s();!(D=z.n()).done;){var A=D.value;if(A.layerData.has(t)){A.key.level!==P&&(P=A.key.level,y.setDataUniforms(O,d,n,P,g));var E=A.layerData.get(t);if(E.fillIndexCount){E.prepareForRendering(f);var M=E.fillVertexArrayObject;if(!Object(v.j)(M)){if(f.bindVAO(M),O.setUniformMatrix3fv("u_dvsMat3",A.transforms.dvs),f.setStencilFunction(514,A.stencilRef,255),l){var V=Math.max(Math.pow(2,Math.round(d)-A.key.level),1),L=A.rangeX/(x*A.width*V);O.setUniform1f("u_patternFactor",L)}if(c){var R=E.patternMap;if(!R)continue;var k,j=Object(I.a)(R);try{for(j.s();!(k=j.n()).done;){var F=Object(o.a)(k.value,2),U=F[0],N=F[1],H=g.getPageSize(U);Object(v.k)(H)&&(g.bind(f,9729,U,ie.y),O.setUniform2fv("u_mosaicSize",H),O.setUniform1i("u_texture",ie.y),f.drawElements(4,N[1],5125,Uint32Array.BYTES_PER_ELEMENT*N[0]))}}catch(B){j.e(B)}finally{j.f()}}else f.drawElements(4,E.fillIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*E.fillIndexStart);A.triangleCount+=E.fillIndexCount/3}}}}}catch(B){z.e(B)}finally{z.f()}}}},{key:"_drawOutline",value:function(e,t,n,i,a,r,o){var l=e.context,s=e.displayLevel,c=e.state,u=e.drawPhase,f=e.painter,d=e.pixelRatio,_=e.spriteMosaic,m=n.outlineMaterial,h=f.vectorTilesMaterialManager,p=.75/d,g=u===de.b.HITTEST,y=this._outlineProgramOptions;y.id=g;var b=h.getMaterialProgram(l,m,y);l.useProgram(b),b.setUniformMatrix3fv("u_displayMat3",1===r?c.displayMat3:c.displayViewMat3),b.setUniform2fv("u_fillTranslation",a),b.setUniform1f("u_depth",n.z+pe),b.setUniform1f("u_outline_width",p),g&&b.setUniform4fv("u_id",o);var x,S=-1,C=Object(I.a)(i);try{for(C.s();!(x=C.n()).done;){var O=x.value;if(O.layerData.has(t)){O.key.level!==S&&(S=O.key.level,m.setDataUniforms(b,s,n,S,_));var T=O.layerData.get(t);if(T.prepareForRendering(l),T.outlineIndexCount){var w=T.outlineVertexArrayObject;Object(v.j)(w)||(l.bindVAO(w),b.setUniformMatrix3fv("u_dvsMat3",O.transforms.dvs),l.setStencilFunction(514,O.stencilRef,255),l.drawElements(4,T.outlineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*T.outlineIndexStart),O.triangleCount+=T.outlineIndexCount/3)}}}}catch(D){C.e(D)}finally{C.f()}}}]),n}(ae),ye=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(l.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1,pattern:!1,sdf:!1},e}return Object(s.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,i=e.displayLevel,a=e.state,r=e.drawPhase,l=e.painter,s=e.pixelRatio,c=e.spriteMosaic,u=e.styleLayerUID;if(t.some((function(e){var t,n;return null!=(t=null==(n=e.layerData.get(u))?void 0:n.lineIndexCount)&&t}))){var f,d,_=e.styleLayer,m=_.lineMaterial,h=l.vectorTilesMaterialManager,p=_.getPaintValue("line-translate",i),g=_.getPaintValue("line-translate-anchor",i),y=_.getPaintProperty("line-pattern"),b=void 0!==y,x=b&&y.isDataDriven;if(b&&!x){var S=y.getValue(i);f=c.getMosaicItemPosition(S)}var C=!1;if(!b){var O=_.getPaintProperty("line-dasharray");if(C=(d=void 0!==O)&&O.isDataDriven,d&&!C){var T=O.getValue(i),w=_.getDashKey(T,_.getLayoutValue("line-cap",i));f=c.getMosaicItemPosition(w)}}var D=1/s,P=r===de.b.HITTEST,z=this._programOptions;z.id=P,z.pattern=b,z.sdf=d;var A=h.getMaterialProgram(n,m,z);if(n.useProgram(A),A.setUniformMatrix3fv("u_displayViewMat3",a.displayViewMat3),A.setUniformMatrix3fv("u_displayMat3",1===g?a.displayMat3:a.displayViewMat3),A.setUniform2fv("u_lineTranslation",p),A.setUniform1f("u_depth",_.z),A.setUniform1f("u_antialiasing",D),P){var E=Object(_e.c)(u+1);A.setUniform4fv("u_id",E)}if(f&&Object(v.k)(f)){var M=f.page,V=c.getPageSize(M);Object(v.k)(V)&&(c.bind(n,9729,M,ie.y),A.setUniform2fv("u_mosaicSize",V),A.setUniform1i("u_texture",ie.y))}var L,R=-1,k=Object(I.a)(t);try{for(k.s();!(L=k.n()).done;){var j=L.value;if(j.layerData.has(u)){j.key.level!==R&&(R=j.key.level,m.setDataUniforms(A,i,_,R,c));var F=Math.pow(2,i-R)/s;A.setUniform1f("u_zoomFactor",F);var U=j.layerData.get(u);if(U.lineIndexCount){U.prepareForRendering(n);var N=U.lineVertexArrayObject;if(!Object(v.j)(N)){if(n.bindVAO(N),A.setUniformMatrix3fv("u_dvsMat3",j.transforms.dvs),n.setStencilFunction(514,j.stencilRef,255),x||C){var H=U.patternMap;if(!H)continue;var B,G=Object(I.a)(H);try{for(G.s();!(B=G.n()).done;){var W=Object(o.a)(B.value,2),q=W[0],Z=W[1],Y=c.getPageSize(q);Object(v.k)(Y)&&(c.bind(n,9729,q,ie.y),A.setUniform2fv("u_mosaicSize",Y),A.setUniform1i("u_texture",ie.y),n.drawElements(4,Z[1],5125,Uint32Array.BYTES_PER_ELEMENT*Z[0]))}}catch(X){G.e(X)}finally{G.f()}}else n.drawElements(4,U.lineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*U.lineIndexStart);j.triangleCount+=U.lineIndexCount/3}}}}}catch(X){k.e(X)}finally{k.f()}}}}]),n}(ae),be=n(273),xe=n(893),Se=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(l.a)(this,n),(e=t.apply(this,arguments))._iconProgramOptions={id:!1,sdf:!1},e._sdfProgramOptions={id:!1},e._spritesTextureSize=Object(be.a)(),e}return Object(s.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,i=e.drawPhase,a=e.styleLayerUID,r=e.styleLayer;i===de.b.HITTEST&&(n=Object(_e.c)(a+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}},{key:"_drawIcons",value:function(e,t,n,i){var a,r,l=e.context,s=e.displayLevel,c=e.drawPhase,u=e.painter,f=e.spriteMosaic,d=e.state,_=e.styleLayerUID,m=t.iconMaterial,h=u.vectorTilesMaterialManager,p=!1,g=Object(I.a)(n);try{for(g.s();!(r=g.n()).done;){var y=r.value;if(y.layerData.has(_)&&(a=y.layerData.get(_)).iconPerPageElementsMap.size>0){p=!0;break}}}catch(U){g.e(U)}finally{g.f()}if(p){var b=t.getPaintValue("icon-translate",s),x=t.getPaintValue("icon-translate-anchor",s),S=t.getLayoutValue("icon-rotation-alignment",s);2===S&&(S=0===t.getLayoutValue("symbol-placement",s)?1:0);var C=0===S,O=t.getLayoutValue("icon-keep-upright",s)&&C,T=a.isIconSDF,w=c===de.b.HITTEST,D=this._iconProgramOptions;D.id=w,D.sdf=T;var P=h.getMaterialProgram(l,m,D);l.useProgram(P),P.setUniformMatrix3fv("u_displayViewMat3",0===S?d.displayViewMat3:d.displayMat3),P.setUniformMatrix3fv("u_displayMat3",1===x?d.displayMat3:d.displayViewMat3),P.setUniform2fv("u_iconTranslation",b),P.setUniform1f("u_depth",t.z),P.setUniform1f("u_mapRotation",Object(xe.b)(d.rotation)),P.setUniform1f("u_keepUpright",O?1:0),P.setUniform1f("u_level",10*s),P.setUniform1i("u_texture",ie.y),P.setUniform1f("u_fadeDuration",Z.c/1e3),w&&P.setUniform4fv("u_id",i);var z,A=-1,E=Object(I.a)(n);try{for(E.s();!(z=E.n()).done;){var M=z.value;if(M.layerData.has(_)&&(M.key.level!==A&&(A=M.key.level,m.setDataUniforms(P,s,t,A,f)),0!==(a=M.layerData.get(_)).iconPerPageElementsMap.size)){a.prepareForRendering(l),a.updateOpacityInfo();var V=a.iconVertexArrayObject;if(!Object(v.j)(V)){l.bindVAO(V),P.setUniformMatrix3fv("u_dvsMat3",M.transforms.dvs),P.setUniform1f("u_time",(performance.now()-a.lastOpacityUpdate)/1e3);var L,R=Object(I.a)(a.iconPerPageElementsMap);try{for(R.s();!(L=R.n()).done;){var k=Object(o.a)(L.value,2),j=k[0],F=k[1];this._renderIconRange(e,P,F,j,M)}}catch(U){R.e(U)}finally{R.f()}}}}}catch(U){E.e(U)}finally{E.f()}}}},{key:"_renderIconRange",value:function(e,t,n,i,a){var r=e.context,o=e.spriteMosaic;this._spritesTextureSize[0]=o.getWidth(i)/4,this._spritesTextureSize[1]=o.getHeight(i)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),o.bind(r,9729,i,ie.y),r.setStencilTestEnabled(!0),r.setStencilFunction(516,255,255),r.setStencilWriteMask(0),r.drawElements(4,n[1],5125,Uint32Array.BYTES_PER_ELEMENT*n[0]),a.triangleCount+=n[1]/3}},{key:"_drawText",value:function(e,t,n,i){var a,r,o=this,l=e.context,s=e.displayLevel,c=e.drawPhase,u=e.glyphMosaic,f=e.painter,d=e.pixelRatio,_=e.spriteMosaic,m=e.state,h=e.styleLayerUID,p=t.textMaterial,g=f.vectorTilesMaterialManager,y=!1,b=Object(I.a)(n);try{for(b.s();!(r=b.n()).done;){var x=r.value;if(x.layerData.has(h)&&(a=x.layerData.get(h)).glyphPerPageElementsMap.size>0){y=!0;break}}}catch(H){b.e(H)}finally{b.f()}if(y){var S=t.getPaintProperty("text-opacity");if(!S||S.isDataDriven||0!==S.getValue(s)){var C=t.getPaintProperty("text-color"),O=!C||C.isDataDriven||C.getValue(s)[3]>0,T=t.getPaintProperty("text-halo-width"),w=t.getPaintProperty("text-halo-color"),D=(!T||T.isDataDriven||T.getValue(s)>0)&&(!w||w.isDataDriven||w.getValue(s)[3]>0);if(O||D){var P=t.getLayoutValue("text-rotation-alignment",s);2===P&&(P=0===t.getLayoutValue("symbol-placement",s)?1:0);var z=0===P,A=t.getLayoutValue("text-keep-upright",s)&&z,E=c===de.b.HITTEST,M=.8*3/d;this._glyphTextureSize||(this._glyphTextureSize=Object(be.b)(u.width/4,u.height/4));var V=t.getPaintValue("text-translate",s),L=t.getPaintValue("text-translate-anchor",s),R=this._sdfProgramOptions;R.id=E;var k=g.getMaterialProgram(l,p,R);l.useProgram(k),k.setUniformMatrix3fv("u_displayViewMat3",0===P?m.displayViewMat3:m.displayMat3),k.setUniformMatrix3fv("u_displayMat3",1===L?m.displayMat3:m.displayViewMat3),k.setUniform2fv("u_textTranslation",V),k.setUniform1f("u_depth",t.z+152587890625e-16),k.setUniform2fv("u_mosaicSize",this._glyphTextureSize),k.setUniform1f("u_mapRotation",Object(xe.b)(m.rotation)),k.setUniform1f("u_keepUpright",A?1:0),k.setUniform1f("u_level",10*s),k.setUniform1i("u_texture",ie.x),k.setUniform1f("u_antialiasingWidth",M),k.setUniform1f("u_fadeDuration",Z.c/1e3),E&&k.setUniform4fv("u_id",i);var j,F=-1,U=Object(I.a)(n);try{var N=function(){var e=j.value;if(!e.layerData.has(h))return"continue";if(e.key.level!==F&&(F=e.key.level,p.setDataUniforms(k,s,t,F,_)),0===(a=e.layerData.get(h)).glyphPerPageElementsMap.size)return"continue";a.prepareForRendering(l),a.updateOpacityInfo();var n=a.textVertexArrayObject;if(Object(v.j)(n))return"continue";l.bindVAO(n),k.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),l.setStencilTestEnabled(!0),l.setStencilFunction(516,255,255),l.setStencilWriteMask(0);var i=(performance.now()-a.lastOpacityUpdate)/1e3;k.setUniform1f("u_time",i),a.glyphPerPageElementsMap.forEach((function(t,n){o._renderGlyphRange(l,t,n,u,k,D,O,e)}))};for(U.s();!(j=U.n()).done;)N()}catch(H){U.e(H)}finally{U.f()}}}}}},{key:"_renderGlyphRange",value:function(e,t,n,i,a,r,o,l){i.bind(e,9729,n,ie.x),r&&(a.setUniform1f("u_halo",1),e.drawElements(4,t[1],5125,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),o&&(a.setUniform1f("u_halo",0),e.drawElements(4,t[1],5125,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}]),n}(ae),Ce=n(42),Oe=(n(511),n(806),n(68)),Te=n(826),we=n(731),Ie=n(211),De={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};we.a;var Pe=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),ze=(new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),new Float32Array([0,92/255,230/255,1]),new Float32Array([0,0,0,1]),{vtlBackground:me,vtlFill:ge,vtlLine:ye,vtlCircle:he,vtlSymbol:Se}),Ae={background:{"background.frag":"#ifdef PATTERN\nuniform lowp float u_opacity;\nuniform lowp sampler2D u_texture;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_tileTextureCoord;\n#else\nuniform lowp vec4 u_color;\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main() {\n#ifdef PATTERN\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\ngl_FragColor = u_opacity * color;\n#else\ngl_FragColor = u_color;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","background.vert":"precision mediump float;\nattribute vec2 a_pos;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_coord_range;\nuniform mediump float u_depth;\n#ifdef PATTERN\nuniform mediump mat3 u_pattern_matrix;\nvarying mediump vec2 v_tileTextureCoord;\nuniform mediump vec4 u_tlbr;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\n#endif\nvoid main() {\ngl_Position = vec4((u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0)).xy, u_depth, 1.0);\n#ifdef PATTERN\nv_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\nv_tlbr             = u_tlbr / u_mosaicSize.xyxy;\n#endif\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\n}"},circle:{"circle.frag":"precision lowp float;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_stroke_color;\nvarying mediump float v_blur;\nvarying mediump float v_stroke_width;\nvarying mediump float v_radius;\nvarying mediump vec2 v_offset;\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nmediump float dist = length(v_offset);\nmediump float alpha = smoothstep(0.0, -v_blur, dist - 1.0);\nlowp float color_mix_ratio = v_stroke_width < 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));\ngl_FragColor = alpha * mix(v_color, v_stroke_color, color_mix_ratio);\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","circle.vert":"precision mediump float;\nattribute vec2 a_pos;\n#pragma header\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_stroke_color;\nvarying mediump float v_blur;\nvarying mediump float v_stroke_width;\nvarying mediump float v_radius;\nvarying mediump vec2 v_offset;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform mediump vec2 u_circleTranslation;\nuniform mediump float u_depth;\nuniform mediump float u_antialiasingWidth;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\nv_stroke_color = stroke_color * stroke_opacity;\nv_stroke_width = stroke_width;\nv_radius = radius;\nv_blur = max(blur, u_antialiasingWidth / (radius + stroke_width));\nmediump vec2 offset = vec2(mod(a_pos, 2.0) * 2.0 - 1.0);\nv_offset = offset;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos * 0.5, 1.0) + u_displayMat3 * vec3((v_radius + v_stroke_width) * offset + u_circleTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n}"},fill:{"fill.frag":"precision lowp float;\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\nvarying mediump vec2 v_tileTextureCoord;\nvarying mediump vec4 v_tlbr;\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\nvec4 mixColors(vec4 color1, vec4 color2) {\nfloat compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\nvec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\nreturn vec4(compositeColor, compositeAlpha);\n}\nvoid main()\n{\n#ifdef PATTERN\nmediump vec2 normalizedTextureCoord = fract(v_tileTextureCoord);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\ngl_FragColor = v_color[3] * color;\n#else\ngl_FragColor = v_color;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","fill.vert":"precision mediump float;\nattribute vec2 a_pos;\n#pragma header\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_fillTranslation;\n#ifdef PATTERN\n#include <util/util.glsl>\nuniform mediump vec2 u_mosaicSize;\nuniform mediump float u_patternFactor;\nvarying mediump vec2 v_tileTextureCoord;\nvarying mediump vec4 v_tlbr;\n#endif\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\n#ifdef PATTERN\nfloat patternWidth = nextPOT(tlbr.z - tlbr.x);\nfloat patternHeight = nextPOT(tlbr.w - tlbr.y);\nfloat scaleX = 1.0 / (patternWidth * u_patternFactor);\nfloat scaleY = 1.0 / (patternHeight * u_patternFactor);\nmat3 patterMat = mat3(scaleX, 0.0,    0.0,\n0.0,    -scaleY, 0.0,\n0.0,    0.0,    1.0);\nv_tileTextureCoord = (patterMat * vec3(a_pos, 1.0)).xy;\nv_tlbr             = tlbr / u_mosaicSize.xyxy;\n#endif\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(u_fillTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n}"},icon:{"icon.frag":"precision mediump float;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nuniform lowp vec4 u_color;\nuniform lowp vec4 u_outlineColor;\n#endif\nvarying mediump vec2 v_tex;\nvarying lowp float v_opacity;\nvarying mediump vec2 v_size;\nvarying lowp vec4 v_color;\n#ifdef SDF\nvarying mediump flaot v_halo_width;\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\n#include <util/encoding.glsl>\nvec4 mixColors(vec4 color1, vec4 color2) {\nfloat compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\nvec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\nreturn vec4(compositeColor, compositeAlpha);\n}\nvoid main()\n{\n#ifdef SDF\nlowp vec4 fillPixelColor = v_color;\nfloat d = rgba2float(texture2D(u_texture, v_tex)) - 0.5;\nconst float softEdgeRatio = 0.248062016;\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * softEdgeRatio * size;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nif (v_halo_width > 0.25) {\nlowp vec4 outlinePixelColor = u_outlineColor;\nconst float outlineLimitRatio = (16.0 / 86.0);\nfloat clampedOutlineSize = softEdgeRatio * min(v_halo_width, outlineLimitRatio * max(v_size.x, v_size.y));\noutlinePixelColor *= clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\ngl_FragColor = v_opacity * mixColors(fillPixelColor, outlinePixelColor);\n}\nelse {\ngl_FragColor = v_opacity * fillPixelColor;\n}\n#else\nlowp vec4 texColor = texture2D(u_texture, v_tex);\ngl_FragColor = v_opacity * texColor;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","icon.vert":"attribute vec2 a_pos;\nattribute vec2 a_vertexOffset;\nattribute vec4 a_texAngleRange;\nattribute vec4 a_levelInfo;\nattribute float a_opacityInfo;\n#pragma header\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\n#ifdef SDF\nvarying mediump float v_halo_width;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform mediump vec2 u_iconTranslation;\nuniform vec2 u_mosaicSize;\nuniform mediump float u_depth;\nuniform mediump float u_mapRotation;\nuniform mediump float u_level;\nuniform lowp float u_keepUpright;\nuniform mediump float u_fadeDuration;\nvarying mediump vec2 v_tex;\nvarying lowp float v_opacity;\nvarying mediump vec2 v_size;\nconst float C_OFFSET_PRECISION = 1.0 / 8.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float tileCoordRatio = 1.0 / 8.0;\nuniform highp float u_time;\nvoid main()\n{\n#pragma main\nv_color = color;\nv_opacity = opacity;\n#ifdef SDF\nv_halo_width = halo_width;\n#endif\nfloat modded = mod(a_opacityInfo, 128.0);\nfloat targetOpacity = (a_opacityInfo - modded) / 128.0;\nfloat startOpacity = modded / 127.0;\nfloat interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);\nv_opacity *= interpolatedOpacity;\nmediump float a_angle         = a_levelInfo[1];\nmediump float a_minLevel      = a_levelInfo[2];\nmediump float a_maxLevel      = a_levelInfo[3];\nmediump vec2 a_tex            = a_texAngleRange.xy;\nmediump float delta_z = 0.0;\nmediump float rotated = mod(a_angle + u_mapRotation, 256.0);\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated));\ndelta_z += 1.0 - step(a_minLevel, u_level);\ndelta_z += step(a_maxLevel, u_level);\ndelta_z += step(v_opacity, 0.0);\nvec2 offset = C_OFFSET_PRECISION * a_vertexOffset;\nv_size = abs(offset);\n#ifdef SDF\noffset = (120.0 / 86.0) * offset;\n#endif\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayViewMat3 * vec3(size * offset, 0.0) + u_displayMat3 * vec3(u_iconTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nv_tex = a_tex.xy / u_mosaicSize;\n}"},line:{"line.frag":"precision lowp float;\nvarying mediump vec2 v_normal;\nvarying highp float v_accumulatedDistance;\nvarying mediump float v_lineHalfWidth;\nvarying lowp vec4 v_color;\nvarying mediump float v_blur;\n#if defined (PATTERN) || defined(SDF)\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\nvarying mediump float v_widthRatio;\nuniform sampler2D u_texture;\nuniform mediump float u_antialiasing;\n#endif\n#ifdef SDF\n#include <util/encoding.glsl>\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nmediump float fragDist = length(v_normal) * v_lineHalfWidth;\nlowp float alpha = clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);\n#ifdef PATTERN\nmediump float relativeTexX = mod(v_accumulatedDistance / (v_patternSize.x * v_widthRatio), 1.0);\nmediump float relativeTexY = 0.5 + v_normal.y * v_lineHalfWidth / (v_patternSize.y * v_widthRatio);\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\nlowp vec4 color = texture2D(u_texture, texCoord);\ngl_FragColor = alpha * v_color[3] * color;\n#elif defined(SDF)\nmediump float relativeTexX = mod((v_accumulatedDistance * 0.5) / (v_patternSize.x * v_widthRatio), 1.0);\nmediump float relativeTexY =  0.5 + 0.25 * v_normal.y;\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * v_lineHalfWidth;\ngl_FragColor = alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\n#else\ngl_FragColor = alpha * v_color;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","line.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec4 a_extrude_offset;\nattribute vec4 a_dir_normal;\nattribute vec2 a_accumulatedDistance;\n#pragma header\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform mediump float u_zoomFactor;\nuniform mediump vec2 u_lineTranslation;\nuniform mediump float u_antialiasing;\nuniform mediump float u_depth;\nvarying mediump vec2 v_normal;\nvarying highp float v_accumulatedDistance;\nconst float scale = 1.0 / 31.0;\nconst mediump float tileCoordRatio = 8.0;\n#if defined (SDF)\nconst mediump float sdfPatternHalfWidth = 15.5;\n#endif\n#if defined (PATTERN) || defined(SDF)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\nvarying mediump float v_widthRatio;\n#endif\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\nvarying mediump float v_lineHalfWidth;\nvarying mediump float v_blur;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\nv_blur = blur + u_antialiasing;\nv_normal = a_dir_normal.zw * scale;\n#if defined (PATTERN) || defined(SDF)\nv_tlbr          = tlbr / u_mosaicSize.xyxy;\nv_patternSize   = vec2(tlbr.z - tlbr.x, tlbr.y - tlbr.w);\n#if defined (PATTERN)\nv_widthRatio = width / v_patternSize.y;\n#else\nv_widthRatio = width / sdfPatternHalfWidth / 2.0;\n#endif\n#endif\nv_lineHalfWidth = (width + u_antialiasing) * 0.5;\nmediump vec2 dir = a_dir_normal.xy * scale;\nmediump vec2 offset_ = a_extrude_offset.zw * scale * offset;\nmediump vec2 dist = v_lineHalfWidth * scale * a_extrude_offset.xy;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos + offset_ * tileCoordRatio / u_zoomFactor, 1.0) + u_displayViewMat3 * vec3(dist, 0.0) + u_displayMat3 * vec3(u_lineTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n#if defined (PATTERN) || defined(SDF)\nv_accumulatedDistance = a_accumulatedDistance.x * u_zoomFactor / tileCoordRatio + dot(dir, dist + offset_);\n#endif\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\n}"},outline:{"outline.frag":"varying lowp vec4 v_color;\nvarying mediump vec2 v_normal;\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nlowp float dist = abs(v_normal.y);\nlowp float alpha = smoothstep(1.0, 0.0, dist);\ngl_FragColor = alpha * v_color;\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","outline.vert":"attribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_xnormal;\n#pragma header\nvarying lowp vec4 v_color;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform mediump vec2 u_fillTranslation;\nuniform mediump float u_depth;\nuniform mediump float u_outline_width;\nvarying lowp vec2 v_normal;\nconst float scale = 1.0 / 15.0;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nv_normal = a_xnormal;\nmediump vec2 dist = u_outline_width * scale * a_offset;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(dist + u_fillTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n}"},text:{"text.frag":"uniform lowp sampler2D u_texture;\nvarying lowp vec2 v_tex;\nvarying lowp vec4 v_color;\nvarying mediump float v_edgeWidth;\nvarying mediump float v_edgeDistance;\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float alpha = smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist);\ngl_FragColor = alpha * v_color;\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","text.vert":"attribute vec2 a_pos;\nattribute vec2 a_vertexOffset;\nattribute vec4 a_texAngleRange;\nattribute vec4 a_levelInfo;\nattribute float a_opacityInfo;\n#pragma header\nvarying lowp vec4 v_color;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform mediump vec2 u_textTranslation;\nuniform vec2 u_mosaicSize;\nuniform mediump float u_depth;\nuniform mediump float u_mapRotation;\nuniform mediump float u_level;\nuniform lowp float u_keepUpright;\nuniform mediump float u_fadeDuration;\nvarying lowp vec2 v_tex;\nconst float offsetPrecision = 1.0 / 8.0;\nconst mediump float edgePos = 0.75;\nuniform mediump float u_antialiasingWidth;\nvarying mediump float v_edgeDistance;\nvarying mediump float v_edgeWidth;\nuniform lowp float u_halo;\nconst float sdfFontScale = 1.0 / 24.0;\nconst float sdfPixel = 3.0;\nuniform highp float u_time;\nvoid main()\n{\n#pragma main\nif (u_halo > 0.5)\n{\nv_color = halo_color * opacity;\nhalo_width *= sdfPixel;\nhalo_blur *= sdfPixel;\n}\nelse\n{\nv_color = color * opacity;\nhalo_width = 0.0;\nhalo_blur = 0.0;\n}\nfloat modded = mod(a_opacityInfo, 128.0);\nfloat targetOpacity = (a_opacityInfo - modded) / 128.0;\nfloat startOpacity = modded / 127.0;\nfloat interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);\nv_color *= interpolatedOpacity;\nmediump float a_angle       = a_levelInfo[1];\nmediump float a_minLevel    = a_levelInfo[2];\nmediump float a_maxLevel    = a_levelInfo[3];\nmediump vec2 a_tex          = a_texAngleRange.xy;\nmediump float a_visMinAngle    = a_texAngleRange.z;\nmediump float a_visMaxAngle    = a_texAngleRange.w;\nmediump float delta_z = 0.0;\nmediump float angle = mod(a_angle + u_mapRotation, 256.0);\nif (a_visMinAngle < a_visMaxAngle)\n{\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) + (1.0 - step(a_visMinAngle, angle)));\n}\nelse\n{\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) * (1.0 - step(a_visMinAngle, angle)));\n}\ndelta_z += 1.0 - step(a_minLevel, u_level);\ndelta_z += step(a_maxLevel, u_level);\ndelta_z += step(v_color[3], 0.0);\nv_tex = a_tex.xy / u_mosaicSize;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nv_edgeDistance = edgePos - halo_width / size;\nv_edgeWidth = (u_antialiasingWidth + halo_blur) / size;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + sdfFontScale * u_displayViewMat3 * vec3(offsetPrecision * size * a_vertexOffset, 0.0) + u_displayMat3 * vec3(u_textTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}","util.glsl":"float nextPOT(in float x) {\nreturn pow(2.0, ceil(log2(abs(x))));\n}"}};var Ee=new oe((function(e){var t=Ae;return e.split("/").forEach((function(e){t&&(t=t[e])})),t}));function Me(e){return Ee.resolveIncludes(e)}var Ve=function(e){return fe({ID:e.id,PATTERN:e.pattern})},Le={shaders:function(e){return{vertexShader:Ve(e)+Me("background/background.vert"),fragmentShader:Ve(e)+Me("background/background.frag")}}},Re=function(e){return fe({ID:e.id})},ke={shaders:function(e){return{vertexShader:Re(e)+Me("circle/circle.vert"),fragmentShader:Re(e)+Me("circle/circle.frag")}}},je=function(e){return fe({ID:e.id,PATTERN:e.pattern})},Fe={shaders:function(e){return{vertexShader:je(e)+Me("fill/fill.vert"),fragmentShader:je(e)+Me("fill/fill.frag")}}},Ue=function(e){return fe({ID:e.id})},Ne={shaders:function(e){return{vertexShader:Ue(e)+Me("outline/outline.vert"),fragmentShader:Ue(e)+Me("outline/outline.frag")}}},He=function(e){return fe({ID:e.id,SDF:e.sdf})},Be={shaders:function(e){return{vertexShader:He(e)+Me("icon/icon.vert"),fragmentShader:He(e)+Me("icon/icon.frag")}}},Ge=function(e){return fe({ID:e.id,PATTERN:e.pattern,SDF:e.sdf})},We={shaders:function(e){return{vertexShader:Ge(e)+Me("line/line.vert"),fragmentShader:Ge(e)+Me("line/line.frag")}}},qe=function(e){return fe({ID:e.id})},Ze={shaders:function(e){return{vertexShader:qe(e)+Me("text/text.vert"),fragmentShader:qe(e)+Me("text/text.frag")}}},Ye=function(){function e(){Object(l.a)(this,e),this._programByKey=new Map}return Object(s.a)(e,[{key:"dispose",value:function(){this._programByKey.forEach((function(e){return e.dispose()})),this._programByKey.clear()}},{key:"getMaterialProgram",value:function(e,t,n){var i=t.key<<3|this._getMaterialOptionsValue(t.type,n);if(this._programByKey.has(i))return this._programByKey.get(i);var a=(0,this._getProgramTemplate(t.type).shaders)(n),r=a.vertexShader,o=a.fragmentShader,l=t.getShaderHeader(),s=t.getShaderMain(),c=r.replace("#pragma header",l).replace("#pragma main",s),u=new ue.a(e,c,o,t.getAttributeLocations());return this._programByKey.set(i,u),u}},{key:"_getMaterialOptionsValue",value:function(e,t){switch(e){case 0:var n=t;return(n.pattern?1:0)<<1|(n.id?1:0);case 1:var i=t;return(i.pattern?1:0)<<1|(i.id?1:0);case 2:case 5:case 6:return t.id?1:0;case 3:var a=t;return(a.sdf?1:0)<<2|(a.pattern?1:0)<<1|(a.id?1:0);case 4:var r=t;return(r.sdf?1:0)<<1|(r.id?1:0);default:return 0}}},{key:"_getProgramTemplate",value:function(e){switch(e){case 0:return Le;case 5:return ke;case 1:return Fe;case 4:return Be;case 3:return We;case 2:return Ne;case 6:return Ze;default:return null}}}]),e}(),Xe=1e-6,Ke=function(){function e(t,n){Object(l.a)(this,e),this.spriteMosaic=t,this.glyphMosaic=n,this._brushCache=new Map,this._vtlMaterialManager=new Ye}return Object(s.a)(e,[{key:"dispose",value:function(){this._brushCache&&(this._brushCache.forEach((function(e){return e.dispose()})),this._brushCache=null),this._vtlMaterialManager=Object(v.f)(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}},{key:"vectorTilesMaterialManager",get:function(){return this._vtlMaterialManager}},{key:"drawTile",value:function(e,t,n){var i=this,a=e.context,r=n.layers;n.backgroundBucketIds.length>0&&(e.renderPass="background",n.backgroundBucketIds.forEach((function(a){return i._renderStyleLayer(n.getLayerById(a),e,t,!0)}))),a.setBlendingEnabled(!1),a.setDepthTestEnabled(!0),a.setDepthWriteEnabled(!0),a.setDepthFunction(515),e.renderPass="opaque";for(var o=r.length-1;o>=0;o--)this._renderStyleLayer(r[o],e,t,!1);a.setDepthWriteEnabled(!1),a.setBlendingEnabled(!0),a.setBlendFunctionSeparate(1,771,1,771),e.renderPass="translucent";for(var l=0;l<r.length;l++)this._renderStyleLayer(r[l],e,t,!1);a.setDepthTestEnabled(!1),e.renderPass="symbol";for(var s=0;s<r.length;s++)this._renderStyleLayer(r[s],e,t,!1);a.bindVAO()}},{key:"_renderStyleLayer",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(i||e&&n.layerData.has(e.uid)){var a=e.getLayoutProperty("visibility");if(!a||1!==a.getValue()){var r,o=t.renderPass;switch(e.type){case 0:if("background"!==o)return;r="vtlBackground";break;case 1:if("opaque"!==o&&"translucent"!==t.renderPass)return;r="vtlFill";break;case 2:if("translucent"!==o)return;r="vtlLine";break;case 4:if("symbol"!==o)return;r="vtlCircle";break;case 3:if("symbol"!==o)return;r="vtlSymbol"}var l=t.displayLevel;void 0!==e.minzoom&&e.minzoom>l+Xe||void 0!==e.maxzoom&&e.maxzoom<=l-Xe||(t.styleLayerUID=e.uid,t.styleLayer=e,this.drawWithBrush(t,n,r))}}}},{key:"drawWithBrush",value:function(e,t,n){if(!this._brushCache.has(n)){var i=ze[n];this._brushCache.set(n,new i)}this._brushCache.get(n).drawMany(e,[t])}}]),e}(),Je=n(961),Qe=n(631),$e=n(654),et=n(82),tt=n(630),nt=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(e){var i;return Object(l.a)(this,n),(i=t.call(this,e)).type="vector-tile-3d",i}return Object(s.a)(n,[{key:"initialize",value:function(){var e=this,t=et.q.force512VTL?this.layer.tileInfo:this.layer.compatibleTileInfo256,n=this._getTileInfoSupportError(t,this.layer.fullExtent);if(n)this.addResolvingPromise(Promise.reject(n));else{var i=this.view,a=i.basemapTerrain,r=i.spatialReference,l=i.pixelRatio,s=Object(_.l)(this.view,"basemapTerrain.tilingSchemeLocked").then((function(){var t,n=a.tilingScheme,i=n.pixelSize;e.schemaHelper=new g.a(i,r.isGeographic),t=256===i?e.layer.compatibleTileInfo256:e.view.spatialReference.isGeographic?e.layer.compatibleTileInfo512:e.layer.tileInfo;var o=e._getTileInfoCompatibilityError(t,n);if(o)throw o;e._set("tileInfo",t)}));this._tileHandlerController=Object(d.e)();var c=this.view.resourceController;this._memCache=c.memoryController.getMemCache(this.layer.uid,(function(e){return e.release()}));var u=this.layer.currentStyleInfo,f=u.style,v=u.spriteUrl,m=u.glyphsUrl,h=new Je.a(f,{spriteUrl:v,glyphsUrl:m}),p=a.mapTileRequester;this._tileHandler=new ne(this.layer,h,l,this._memCache,p);var y=this._tileHandlerController.signal,b=function(e){return c.schedule(e)},x=this._tileHandler.start({signal:y,schedule:b}),S=this._tileHandler.spriteMosaic;S.then((function(t){!Object(d.o)(y)&&e._tileHandler&&(e.painter=new Ke(t,e._tileHandler.glyphMosaic))})),x.then((function(){return e._tileHandlerController=null}));var C=function(){e._tileHandlerController&&e._tileHandlerController.abort(),e._tileHandlerController=Object(d.e)(),e._memCache.clear();var t=e.layer.currentStyleInfo,n=t.style,i=t.spriteUrl,a=t.glyphsUrl,r=new Je.a(n,{spriteUrl:i,glyphsUrl:a}),s=new ne(e.layer,r,l,e._memCache,p),c=s.start({signal:e._tileHandlerController.signal,schedule:b}),u=s.spriteMosaic;c.then((function(){return e._tileHandlerController=null})),e.updatingHandles.addPromise(Promise.all([c,u]).then((function(t){var n=Object(o.a)(t,2)[1],i=e._tileHandler,a=e.painter;e.painter=new Ke(n,s.glyphMosaic),e._tileHandler=s,e.emit("data-changed"),i.destroy(),a&&a.dispose()})))};this.updatingHandles.add(this,"layer.currentStyleInfo",C),this.updatingHandles.add(this,"view.pixelRatio",C);var O=Promise.all([s,x,S]);this.addResolvingPromise(O)}}},{key:"destroy",value:function(){this.painter=Object(v.f)(this.painter),this._tileHandlerController&&(this._tileHandlerController.abort(),this._tileHandlerController=null),Object(v.e)(this._tileHandler),this._memCache=Object(v.e)(this._memCache),this._tileHandler=null}},{key:"dataLevelRange",get:function(){var e=this.tileInfo.lods,t=e[0].scale,n=e[e.length-1].scale,i=this.levelRangeFromScaleRange(t,n);return 1===i.minLevel&&256===this.tileInfo.size[0]&&(i.minLevel=0),i}},{key:"fetchTile",value:function(){var e=Object(r.a)(a.a.mark((function e(t,n,i,r){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",this._tileHandler.getVectorTile(t,n,i,r));case 1:case"end":return e.stop()}}),e,this)})));return function(t,n,i,a){return e.apply(this,arguments)}}()}]),n}(Object($e.a)(Object(Qe.a)(tt.a)));Object(f.a)([Object(m.b)({aliasOf:"layer.fullExtent"})],nt.prototype,"fullExtent",void 0),Object(f.a)([Object(m.b)()],nt.prototype,"layer",void 0),Object(f.a)([Object(m.b)()],nt.prototype,"tileInfo",void 0),Object(f.a)([Object(m.b)()],nt.prototype,"dataLevelRange",null),Object(f.a)([Object(m.b)()],nt.prototype,"updatingProgressValue",void 0);var it=nt=Object(f.a)([Object(p.a)("esri.views.3d.layers.VectorTileLayerView3D")],nt)},802:function(e,t,n){"use strict";var i,a,r,o,l,s,c;n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return s})),function(e){e[e.FILL=0]="FILL",e[e.LINE=1]="LINE",e[e.MARKER=2]="MARKER",e[e.TEXT=3]="TEXT",e[e.LABEL=4]="LABEL"}(i||(i={})),function(e){e[e.SUCCEEDED=0]="SUCCEEDED",e[e.FAILED_OUT_OF_MEMORY=1]="FAILED_OUT_OF_MEMORY"}(a||(a={})),function(e){e[e.NONE=0]="NONE",e[e.MAP=1]="MAP",e[e.LABEL=2]="LABEL",e[e.LABEL_ALPHA=4]="LABEL_ALPHA",e[e.HITTEST=8]="HITTEST",e[e.HIGHLIGHT=16]="HIGHLIGHT",e[e.CLIP=32]="CLIP",e[e.DEBUG=64]="DEBUG",e[e.NUM_DRAW_PHASES=9]="NUM_DRAW_PHASES"}(r||(r={})),function(e){e[e.SIZE=0]="SIZE",e[e.COLOR=1]="COLOR",e[e.OPACITY=2]="OPACITY",e[e.ROTATION=3]="ROTATION"}(o||(o={})),function(e){e[e.NONE=0]="NONE",e[e.OPACITY=1]="OPACITY",e[e.COLOR=2]="COLOR",e[e.ROTATION=4]="ROTATION",e[e.SIZE_MINMAX_VALUE=8]="SIZE_MINMAX_VALUE",e[e.SIZE_SCALE_STOPS=16]="SIZE_SCALE_STOPS",e[e.SIZE_FIELD_STOPS=32]="SIZE_FIELD_STOPS",e[e.SIZE_UNIT_VALUE=64]="SIZE_UNIT_VALUE"}(l||(l={})),function(e){e[e.MINMAX_TARGETS_OUTLINE=128]="MINMAX_TARGETS_OUTLINE",e[e.SCALE_TARGETS_OUTLINE=256]="SCALE_TARGETS_OUTLINE",e[e.FIELD_TARGETS_OUTLINE=512]="FIELD_TARGETS_OUTLINE",e[e.UNIT_TARGETS_OUTLINE=1024]="UNIT_TARGETS_OUTLINE"}(s||(s={})),function(e){e[e.SPRITE=0]="SPRITE",e[e.GLYPH=1]="GLYPH"}(c||(c={}))},805:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return a}));var i=new Float32Array(1);new Uint32Array(i.buffer);function a(e){return[255&e,(65280&e)>>>8,(16711680&e)>>>16,(4278190080&e)>>>24]}function r(e,t){return 65535&e|t<<16}function o(e,t,n,i){return 255&e|(255&t)<<8|(255&n)<<16|i<<24}},806:function(e,t,n){"use strict";n.d(t,"a",(function(){return x})),n.d(t,"b",(function(){return T})),n.d(t,"c",(function(){return C})),n.d(t,"d",(function(){return S})),n.d(t,"e",(function(){return h})),n.d(t,"f",(function(){return O})),n.d(t,"g",(function(){return _})),n.d(t,"h",(function(){return m}));var i=n(14),a=n(23),r=n(22),o=n(6),l=n(7),s=n(2),c=n(3),u=n(24),f=n(802),v=n(923);function d(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=f.d.SIZE_FIELD_STOPS|f.d.SIZE_MINMAX_VALUE|f.d.SIZE_SCALE_STOPS|f.d.SIZE_UNIT_VALUE,i=(e&(f.e.FIELD_TARGETS_OUTLINE|f.e.MINMAX_TARGETS_OUTLINE|f.e.SCALE_TARGETS_OUTLINE|f.e.UNIT_TARGETS_OUTLINE))>>>4;return t?n&i:n&~i}function _(e,t,n,i,a){switch(e){case f.c.FILL:return x.from(t,i);case f.c.LINE:return C.from(t,n);case f.c.MARKER:return S.from(t);case f.c.TEXT:return O.from(t);case f.c.LABEL:return T.from(t,a);default:throw new Error("Unable to createMaterialKey for unknown geometryType ".concat(e))}}function m(e){switch(h.load(e).geometryType){case f.c.MARKER:return new S(e);case f.c.FILL:return new x(e);case f.c.LINE:return new C(e);case f.c.TEXT:return new O(e);case f.c.LABEL:return new T(e)}}var h=function(){function e(t){Object(s.a)(this,e),this._data=0,this._data=t}return Object(c.a)(e,[{key:"data",get:function(){return this._data},set:function(e){this._data=e}},{key:"geometryType",get:function(){return this.bits(8,11)},set:function(e){this.setBits(e,8,11)}},{key:"mapAligned",get:function(){return!!this.bit(20)},set:function(e){this.setBit(20,e)}},{key:"sdf",get:function(){return!!this.bit(11)},set:function(e){this.setBit(11,e)}},{key:"pattern",get:function(){return!!this.bit(12)},set:function(e){this.setBit(12,e)}},{key:"textureBinding",get:function(){return this.bits(0,8)},set:function(e){this.setBits(e,0,8)}},{key:"geometryTypeString",get:function(){switch(this.geometryType){case f.c.FILL:return"fill";case f.c.MARKER:return"marker";case f.c.LINE:return"line";case f.c.TEXT:return"text";case f.c.LABEL:return"label";default:throw new u.a("Unable to handle unknown geometryType: ".concat(this.geometryType))}}},{key:"setBit",value:function(e,t){var n=1<<e;t?this._data|=n:this._data&=~n}},{key:"bit",value:function(e){return(this._data&1<<e)>>e}},{key:"setBits",value:function(e,t,n){for(var i=t,a=0;i<n;i++,a++)this.setBit(i,0!=(e&1<<a))}},{key:"bits",value:function(e,t){for(var n=0,i=e,a=0;i<t;i++,a++)n|=this.bit(i)<<a;return n}},{key:"hasVV",value:function(){return!1}},{key:"setVV",value:function(e,t){}},{key:"getVariation",value:function(){return{mapAligned:this.mapAligned,pattern:this.pattern,sdf:this.sdf}}},{key:"getVariationHash",value:function(){return this._data&~(7&this.textureBinding)}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}}]),e}();h.shared=new h(0);var p=function(e){return function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"vvSizeMinMaxValue",get:function(){return 0!==this.bit(16)},set:function(e){this.setBit(16,e)}},{key:"vvSizeScaleStops",get:function(){return 0!==this.bit(17)},set:function(e){this.setBit(17,e)}},{key:"vvSizeFieldStops",get:function(){return 0!==this.bit(18)},set:function(e){this.setBit(18,e)}},{key:"vvSizeUnitValue",get:function(){return 0!==this.bit(19)},set:function(e){this.setBit(19,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(r.a)(n.prototype),"hasVV",this).call(this)||this.vvSizeMinMaxValue||this.vvSizeScaleStops||this.vvSizeFieldStops||this.vvSizeUnitValue}},{key:"setVV",value:function(e,t){Object(a.a)(Object(r.a)(n.prototype),"setVV",this).call(this,e,t);var i=d(e,t)&e;this.vvSizeMinMaxValue=!!(i&f.d.SIZE_MINMAX_VALUE),this.vvSizeFieldStops=!!(i&f.d.SIZE_FIELD_STOPS),this.vvSizeUnitValue=!!(i&f.d.SIZE_UNIT_VALUE),this.vvSizeScaleStops=!!(i&f.d.SIZE_SCALE_STOPS)}}]),n}(e)},g=function(e){return function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"vvRotation",get:function(){return 0!==this.bit(15)},set:function(e){this.setBit(15,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(r.a)(n.prototype),"hasVV",this).call(this)||this.vvRotation}},{key:"setVV",value:function(e,t){Object(a.a)(Object(r.a)(n.prototype),"setVV",this).call(this,e,t),this.vvRotation=!t&&!!(e&f.d.ROTATION)}}]),n}(e)},y=function(e){return function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"vvColor",get:function(){return 0!==this.bit(13)},set:function(e){this.setBit(13,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(r.a)(n.prototype),"hasVV",this).call(this)||this.vvColor}},{key:"setVV",value:function(e,t){Object(a.a)(Object(r.a)(n.prototype),"setVV",this).call(this,e,t),this.vvColor=!t&&!!(e&f.d.COLOR)}}]),n}(e)},b=function(e){return function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"vvOpacity",get:function(){return 0!==this.bit(14)},set:function(e){this.setBit(14,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(r.a)(n.prototype),"hasVV",this).call(this)||this.vvOpacity}},{key:"setVV",value:function(e,t){Object(a.a)(Object(r.a)(n.prototype),"setVV",this).call(this,e,t),this.vvOpacity=!t&&!!(e&f.d.OPACITY)}}]),n}(e)},x=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"getVariation",value:function(){return Object(i.a)(Object(i.a)({},Object(a.a)(Object(r.a)(n.prototype),"getVariation",this).call(this)),{},{dotDensity:this.dotDensity,vvColor:this.vvColor,vvOpacity:this.vvOpacity})}},{key:"dotDensity",get:function(){return!!this.bit(15)},set:function(e){this.setBit(15,e)}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e,t){var n=this.load(0);return n.geometryType=f.c.FILL,t?n.dotDensity=!0:n.setVV(e,!1),n.data}}]),n}(y(b(h)));x.shared=new x(0);var S=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"getVariation",value:function(){return Object(i.a)(Object(i.a)({},Object(a.a)(Object(r.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvRotation:this.vvRotation,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=this.load(0);return t.geometryType=f.c.MARKER,t.setVV(e,!1),t.data}}]),n}(y(b(g(p(h)))));S.shared=new S(0);var C=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"getVariation",value:function(){return Object(i.a)(Object(i.a)({},Object(a.a)(Object(r.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e,t){var n=this.load(0);return n.geometryType=f.c.LINE,n.setVV(e,t),n.data}}]),n}(y(b(p(h))));C.shared=new C(0);var O=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"getVariation",value:function(){return Object(i.a)(Object(i.a)({},Object(a.a)(Object(r.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvRotation:this.vvRotation,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=this.load(e);return t.geometryType=f.c.TEXT,t.setVV(e,!1),t.data}}]),n}(y(b(g(p(h)))));O.shared=new O(0);var T=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"getVariation",value:function(){return Object(i.a)(Object(i.a)({},Object(a.a)(Object(r.a)(n.prototype),"getVariation",this).call(this)),{},{vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e,t){var n=this.load(0);return n.geometryType=f.c.LABEL,n.setVV(e,!1),n.mapAligned=Object(v.a)(t),n.data}}]),n}(p(h));T.shared=new T(0)},819:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return c}));var i=n(29),a=n(805);function r(e,t){return Array.isArray(t)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]):(e[0]=t.r,e[1]=t.g,e[2]=t.b,e[3]=t.a),e}function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=e[t+3];return e[t+0]*=i,e[t+1]*=i,e[t+2]*=i,n||(e[t+3]*=255),e}function l(e){return o(r([],e))}function s(e){if(!e)return 0;var t=e.r,n=e.g,i=e.b,r=e.a;return Object(a.b)(t*r,n*r,i*r,255*r)}function c(e){if(!e)return 0;var t=Object(i.a)(e,4),n=t[0],r=t[1],o=t[2],l=t[3];return Object(a.b)(n*(l/255),r*(l/255),o*(l/255),l)}},822:function(e,t,n){"use strict";n.d(t,"a",(function(){return E}));var i,a=n(8),r=n.n(a),o=n(15),l=n(14),s=n(2),c=n(3),u=n(6),f=n(7),v=n(0),d=n(107),_=n(34),m=n(24),h=n(61),p=n(16),g=n(647),y=n(73),b=n(25),x=n(154),S=n(44),C=n(36),O=n(1),T=(n(17),n(66)),w=n(12),I=n(115),D=n(27),P=function(){function e(){Object(s.a)(this,e),this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}return Object(c.a)(e,[{key:"getAvailability",value:function(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;var n=(e-this.location.top)*this.location.width+(t-this.location.left),i=n%8,a=n>>3,r=this._tileAvailabilityBitSet;return a<0||a>r.length?"unknown":r[a]&1<<i?"available":"unavailable"}},{key:"_updateFromData",value:function(e){for(var t=this.location.width,n=this.location.height,i=!0,a=!0,r=Math.ceil(t*n/8),o=new Uint8Array(r),l=0,s=0;s<e.length;s++){var c=s%8;e[s]?(a=!1,o[l]|=1<<c):i=!1,7===c&&++l}a?this._allAvailability="unavailable":i?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=o,this.byteSize+=o.length)}}],[{key:"fromDefinition",value:function(t,n){var i=t.service.request||d.default,a=t.row,r=t.col,o=t.width,s=t.height,c={query:{f:"json"}};return n=n?Object(l.a)(Object(l.a)({},c),n):c,i(function(e){var t;if("vector-tile"===e.service.type)t="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);else{var n=e.service.tileServers;t="".concat(n&&n.length?n[e.row%n.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}var i=e.service.query;return i&&(t="".concat(t,"?").concat(i)),t}(t),n).then((function(e){return e.data})).catch((function(e){if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:r,width:o,height:s},valid:!0,data:Object(I.c)(o*s,0)};throw e})).then((function(t){if(t.location&&(t.location.top!==a||t.location.left!==r||t.location.width!==o||t.location.height!==s))throw new m.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:t,definition:{top:a,left:r,width:o,height:s}});return e.fromJSON(t)}))}},{key:"fromJSON",value:function(t){e.validateJSON(t);var n=new e;return n.location=Object.freeze(Object(D.a)(t.location)),n._updateFromData(t.data),Object.freeze(n)}},{key:"validateJSON",value:function(e){if(!e||!e.location)throw new m.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new m.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new m.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new m.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new m.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}]),e}();function z(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}var A=p.a.getLogger("esri.layers.support.TilemapCache"),E=i=function(e){Object(u.a)(n,e);var t=Object(f.a)(n);function n(e){var i;return Object(s.a)(this,n),(i=t.call(this,e))._handles=new h.a,i._pendingTilemapRequests={},i._availableLevels={},i.levels=5,i.cacheByteSize=2097152,i.request=d.default,i._prefetchingEnabled=!0,i}return Object(c.a)(n,[{key:"initialize",value:function(){var e=this;this._tilemapCache=new g.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],(function(){return e._initializeTilemapDefinition()})),Object(C.a)(this,"layer.tileInfo.lods",(function(t){return e._initializeAvailableLevels(t)}),!0)]),this._initializeTilemapDefinition()}},{key:"destroy",value:function(){this._handles&&(this._handles.destroy(),this._handles=null)}},{key:"castLevels",value:function(e){return e<=2?(A.error("Minimum levels for Tilemap is 3, but got ",e),3):e}},{key:"size",get:function(){return 1<<this.levels}},{key:"fetchTilemap",value:function(e,t,n,i){var a=this;if(!this._availableLevels[e])return Promise.reject(new m.a("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));var r=this._tmpTilemapDefinition,o=this._tilemapFromCache(e,t,n,r);if(o)return Promise.resolve(o);var s=i&&i.signal;return i=Object(l.a)(Object(l.a)({},i),{},{signal:null}),new Promise((function(e,t){Object(b.s)(s,(function(){return t(Object(b.f)())}));var n=z(r),o=a._pendingTilemapRequests[n];if(!o){o=P.fromDefinition(r,i).then((function(e){return a._tilemapCache.put(n,e,e.byteSize),e}));var l=function(){return delete a._pendingTilemapRequests[n]};a._pendingTilemapRequests[n]=o,o.then(l,l)}o.then(e,t)}))}},{key:"getAvailability",value:function(e,t,n){if(!this._availableLevels[e])return"unavailable";var i=this._tilemapFromCache(e,t,n,this._tmpTilemapDefinition);return i?i.getAvailability(t,n):"unknown"}},{key:"getAvailabilityUpsample",value:function(e,t,n,i){i.level=e,i.row=t,i.col=n;var a=this.layer.tileInfo;for(a.updateTileInfo(i);;){var r=this.getAvailability(i.level,i.row,i.col);if("unavailable"!==r)return r;if(!a.upsampleTile(i))return"unavailable"}}},{key:"fetchAvailability",value:function(e,t,n,i){return this._availableLevels[e]?this.fetchTilemap(e,t,n,i).catch((function(e){return e})).then((function(i){if(i instanceof P){var a=i.getAvailability(t,n);return"unavailable"===a?Promise.reject(new m.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:n})):a}if(Object(b.n)(i))throw i;return"unknown"})):Promise.reject(new m.a("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")))}},{key:"fetchAvailabilityUpsample",value:function(e,t,n,i,a){var r=this;i.level=e,i.row=t,i.col=n;var o=this.layer.tileInfo;o.updateTileInfo(i);var l=this.fetchAvailability(e,t,n,a).catch((function(e){if(Object(b.n)(e))throw e;if(o.upsampleTile(i))return r.fetchAvailabilityUpsample(i.level,i.row,i.col,i);throw e}));return this._fetchAvailabilityUpsamplePrefetch(i.id,e,t,n,a,l),l}},{key:"_fetchAvailabilityUpsamplePrefetch",value:function(){var e=Object(o.a)(r.a.mark((function e(t,n,a,o,s,c){var u,f,v,d,_,m,h,p,g,y=this;return r.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this._prefetchingEnabled){e.next=2;break}return e.abrupt("return");case 2:if(u="prefetch-".concat(t),!this._handles.has(u)){e.next=5;break}return e.abrupt("return");case 5:return f=Object(b.e)(),c.then((function(){return f.abort()}),(function(){return f.abort()})),v=!1,d={remove:function(){v||(v=!0,f.abort())}},this._handles.add(d,u),e.next=12,Object(x.d)(10,f.signal).catch((function(){}));case 12:if(v||(v=!0,this._handles.remove(u)),!Object(b.o)(f)){e.next=15;break}return e.abrupt("return");case 15:for(_={id:t,level:n,row:a,col:o},m=Object(l.a)(Object(l.a)({},s),{},{signal:f.signal}),h=this.layer.tileInfo,p=function(e){var t=y.fetchAvailability(_.level,_.row,_.col,m);i._prefetches.push(t);var n=function(){i._prefetches.removeUnordered(t)};t.then(n,n)},g=0;i._prefetches.length<i._maxPrefetch&&h.upsampleTile(_);++g)p();case 18:case"end":return e.stop()}}),e,this)})));return function(t,n,i,a,r,o){return e.apply(this,arguments)}}()},{key:"_initializeTilemapDefinition",value:function(){if(this.layer.parsedUrl){var e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(S.E)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}}},{key:"_tilemapFromCache",value:function(e,t,n,i){i.level=e,i.row=t-t%this.size,i.col=n-n%this.size;var a=z(i);return this._tilemapCache.get(a)}},{key:"_initializeAvailableLevels",value:function(e){var t=this;this._availableLevels={},e&&e.forEach((function(e){return t._availableLevels[e.level]=!0}))}},{key:"test",get:function(){var e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:function(t,n,i){return!!e._tilemapFromCache(t,n,i,e._tmpTilemapDefinition)}}}}]),n}(_.a);E._maxPrefetch=4,E._prefetches=new y.a({initialSize:i._maxPrefetch}),Object(v.a)([Object(O.b)({constructOnly:!0,type:Number})],E.prototype,"levels",void 0),Object(v.a)([Object(T.a)("levels")],E.prototype,"castLevels",null),Object(v.a)([Object(O.b)({readOnly:!0,type:Number})],E.prototype,"size",null),Object(v.a)([Object(O.b)({constructOnly:!0,type:Number})],E.prototype,"cacheByteSize",void 0),Object(v.a)([Object(O.b)({constructOnly:!0})],E.prototype,"layer",void 0),Object(v.a)([Object(O.b)({constructOnly:!0})],E.prototype,"request",void 0),E=i=Object(v.a)([Object(w.a)("esri.layers.support.TilemapCache")],E)},823:function(e,t,n){"use strict";n.d(t,"a",(function(){return R})),n.d(t,"b",(function(){return P})),n.d(t,"c",(function(){return z})),n.d(t,"d",(function(){return E})),n.d(t,"e",(function(){return I})),n.d(t,"f",(function(){return A})),n.d(t,"g",(function(){return D}));var i=n(14),a=n(20),r=n(11),o=n(24),l=n(16),s=(n(21),n(32),n(819),n(802)),c=n(2),u=n(3),f=n(129),v=function(){function e(){Object(c.a)(this,e),this.color=[0,0,0,0],this.haloColor=[0,0,0,0],this.haloSize=0,this.size=12,this.angle=0,this.offsetX=0,this.offsetY=0,this.hAnchor=0,this.vAnchor=0}return Object(u.a)(e,[{key:"acquire",value:function(e,t,n,i,a,r,o,l,s){this.color=e,this.haloColor=t,this.haloSize=n,this.size=i,this.angle=a,this.offsetX=r,this.offsetY=o,this.hAnchor=l,this.vAnchor=s}},{key:"release",value:function(){this.color[0]=this.color[1]=this.color[2]=this.color[3]=0,this.haloColor[0]=this.haloColor[1]=this.haloColor[2]=this.haloColor[3]=0,this.haloSize=0,this.size=0,this.angle=0,this.offsetX=0,this.offsetY=0,this.hAnchor=0,this.vAnchor=0}}]),e}();v.pool=new f.a(v);n(63);var d=l.a.getLogger("esri.views.2d.engine.webgl.Utils"),_="geometry",m=[{name:_,strideInBytes:36,divisor:0}],h=[{name:_,strideInBytes:12,divisor:0}],p=[{name:_,strideInBytes:40,divisor:0}],g=[{name:_,strideInBytes:36,divisor:0}],y=[{name:_,strideInBytes:36,divisor:0}];function b(e){var t,n={},i=Object(r.a)(e);try{for(i.s();!(t=i.n()).done;){var a=t.value;n[a.name]=a.strideInBytes}}catch(o){i.e(o)}finally{i.f()}return n}var x=b([{name:_,strideInBytes:36,divisor:0}]),S=b(m),C=b(h),O=b(p),T=b(g),w=b(y);function I(e,t){switch(e){case s.c.MARKER:return x;case s.c.FILL:return t?C:S;case s.c.LINE:return O;case s.c.TEXT:return T;case s.c.LABEL:return w}}function D(e){return"number"==typeof e}function P(e){switch(e){case"butt":return 0;case"round":return 1;case"square":return 2;default:return d.error(new o.a("mapview-invalid-type","Cap type ".concat(e," is not a valid option. Defaulting to round"))),1}}function z(e){switch(e){case"miter":return 2;case"bevel":return 0;case"round":return 1;default:return d.error(new o.a("mapview-invalid-type","Join type ".concat(e," is not a valid option. Defaulting to round"))),1}}function A(e){switch(e){case"opacity":return s.a.OPACITY;case"color":return s.a.COLOR;case"rotation":return s.a.ROTATION;case"size":return s.a.SIZE;default:return d.error("Cannot interpret unknown vv: ".concat(e)),null}}Object(a.a)({},_,35044);function E(e){switch(e){case 5121:return Uint8Array;case 32819:return Uint16Array;case 5126:return Float32Array;default:return void d.error(new o.a("webgl-utils","Unable to handle type ".concat(e)))}}var M=function(e){var t=new Map;for(var n in e){var i,a=Object(r.a)(e[n]);try{for(a.s();!(i=a.n()).done;){var o=i.value;t.set(o.name,o.location)}}catch(l){a.e(l)}finally{a.f()}}return t},V=function(e){var t={};for(var n in e){var i=e[n];t[n]=i.length?i[0].stride:0}return t},L=new Map,R=function(e,t){if(!L.has(e)){var n=function(e){var t={},n=function(n){var a=e[n],r=0;t[n]=a.map((function(e){var t=Object(i.a)(Object(i.a)({},e),{},{normalized:e.normalized||!1,divisor:e.divisor||0,offset:r,stride:0});return r+=e.count*function(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5126:case 5124:case 5125:return 4}}(e.type),t})),t[n].forEach((function(e){return e.stride=r}))};for(var a in e)n(a);return t}(t),a={strides:V(n),bufferLayouts:n,attributes:M(t)};L.set(e,a)}return L.get(e)}},871:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(2),a=n(3),r=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;Object(i.a)(this,e),this.x=t,this.y=n,this.width=a,this.height=r}return Object(a.a)(e,[{key:"isEmpty",get:function(){return this.width<=0||this.height<=0}},{key:"union",value:function(e){this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.width=Math.max(this.width,e.width),this.height=Math.max(this.height,e.height)}}]),e}()},893:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return o}));Number.POSITIVE_INFINITY;var i=Math.PI,a=128/i;Math.LN2;function r(e,t){return(e%=t)>=0?e:e+t}function o(e){return r(e*a,256)}function l(e){return r(.7111111111111111*e,256)}function s(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}},923:function(e,t,n){"use strict";function i(e){switch(e){case"above-along":case"below-along":case"center-along":case"esriServerLinePlacementAboveAlong":case"esriServerLinePlacementBelowAlong":case"esriServerLinePlacementCenterAlong":return!0;default:return!1}}n.d(t,"a",(function(){return i}))},978:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i=n(2),a=n(3),r=n(648),o=n(456),l=function(){function e(t,n){Object(i.a)(this,e),this.lockedSchemaPixelSize=t,this.isGCS=n}return Object(a.a)(e,[{key:"getLevelRowColumn",value:function(e){return this.isGCS?[e[0],e[1]>>1,e[2]>>1]:256===this.lockedSchemaPixelSize&&e[0]>0?[e[0]-1,e[1]>>1,e[2]>>1]:e}},{key:"adjustLevel",value:function(e){return this.isGCS?e:256===this.lockedSchemaPixelSize?e>0?e-1:0:e}},{key:"getShift",value:function(e,t){var n=0,i=0;return(256===this.lockedSchemaPixelSize||this.isGCS)&&(e[2]%2&&(n=t),e[1]%2&&(i=t)),[n,i]}},{key:"getScale",value:function(e){if(this.isGCS){if(512===this.lockedSchemaPixelSize)return 4}else if(256===this.lockedSchemaPixelSize&&0===e)return 1;return 2}}],[{key:"create256x256CompatibleTileInfo",value:function(e){if(!e)return null;if(256===e.size[0]&&256===e.size[1])return e;for(var t=e.spatialReference.isGeographic,n=[],i=e.lods.length,a=0;a<i;a++){var l=e.lods[a],s=t?l.resolution:2*l.resolution;n.push(new r.a({level:l.level,scale:l.scale,resolution:s}))}return new o.a({size:[256,256],dpi:e.dpi,format:e.format,compressionQuality:e.compressionQuality,origin:e.origin,spatialReference:e.spatialReference,lods:n})}},{key:"create512x512CompatibleTileInfo",value:function(e){if(!e)return null;if(256===e.size[0]||256===e.size[1])return null;for(var t=[],n=e.lods.length,i=0;i<n;i++){var a=e.lods[i],l=.5*a.resolution;t.push(new r.a({level:a.level,scale:a.scale,resolution:l}))}return new o.a({size:[512,512],dpi:e.dpi,format:e.format,compressionQuality:e.compressionQuality,origin:e.origin,spatialReference:e.spatialReference,lods:t})}}]),e}()},979:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n(2),a=n(3),r=n(25),o=n(822),l=n(639),s=function(){function e(t){if(Object(i.a)(this,e),t instanceof o.a)this._tilemapCache=t;else{if(!t||!("index"in t))throw new Error("Invalid tilemap!");this._tilemap=t.index}}return Object(a.a)(e,[{key:"dataKey",value:function(e,t){if(this._tilemapCache){var n=e.level,i=e.row,a=e.col,o=new l.a(e);return this._tilemapCache.fetchAvailabilityUpsample(n,i,a,o,t).then((function(){return o.world=e.world,o})).catch((function(e){if(Object(r.n)(e))throw e;return null}))}return this._getIndexedDataKey(e)}},{key:"forEach",value:function(e,t,n,i,a){this._callback=a,this._maxLevel=t+e,this._forEach(this._tilemap,t,n,i)}},{key:"_forEach",value:function(e,t,n,i){0!==e&&(this._callback(t,n,i),t!==this._maxLevel&&"object"==typeof e&&(this._forEach(e[0],t+1,2*n,2*i),this._forEach(e[1],t+1,2*n,2*i+1),this._forEach(e[2],t+1,2*n+1,2*i),this._forEach(e[3],t+1,2*n+1,2*i+1)))}},{key:"_getIndexedDataKey",value:function(e){var t=[e];if(e.level<0||e.row<0||e.col<0||e.row>>e.level>0||e.col>>e.level>0)return Promise.resolve(null);for(var n=e;0!==n.level;)n=new l.a(n.level-1,n.row>>1,n.col>>1,n.world),t.push(n);var i,a,r=this._tilemap,o=t.pop();if(1===r)return Promise.resolve(o);for(;t.length;)if(a=(1&(i=t.pop()).col)+((1&i.row)<<1),r){if(0===r[a]){o=null;break}if(1===r[a]){o=i;break}o=i,r=r[a]}return Promise.resolve(o)}}]),e}()}}]);
//# sourceMappingURL=52.8dd5046a.chunk.js.map