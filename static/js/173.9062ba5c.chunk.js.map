{"version":3,"sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["a","o","t","r","fromJSON","pixelBlock","s","l","type","Promise","resolve","e","toJSON","data","options","extent","c","this","symbolizer","symbolize","n","symbolizerJSON","histograms","rendererJSON","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","i","srcMosaicSize","alignmentInfo","coefs","m","destDimension","sampleSpacing","interpolation"],"mappings":"oQAIsdA,E,sGAAE,SAAuBC,GAAG,IAAMC,EAAEC,IAAEC,SAASH,EAAEI,YAAYC,EAAEC,YAAEL,EAAED,EAAEO,MAAM,OAAOC,QAAQC,QAAQC,YAAEL,IAAIA,EAAEM,Y,2DAAU,WAAaD,GAAb,eAAAX,EAAA,sEAA8BC,YAAEU,EAAEE,KAAKF,EAAEG,SAAzC,cAAsBX,EAAtB,yBAAyDA,GAAGA,EAAES,UAA9D,2C,8EAAuE,SAAUX,GAAGA,EAAEI,WAAWF,IAAEC,SAASH,EAAEI,YAAYJ,EAAEc,OAAOd,EAAEc,OAAOC,IAAEZ,SAASH,EAAEc,QAAQ,KAAK,IAAMb,EAAEe,KAAKC,WAAWC,UAAUlB,GAAG,OAAOQ,QAAQC,QAAQC,YAAET,IAAIA,EAAEU,Y,qEAAU,WAAuBD,GAAvB,eAAAX,EAAA,sDAAgCiB,KAAKC,WAAWE,IAAEhB,SAASO,EAAEU,gBAAgBV,EAAEW,YAAY,mBAAmB,OAAOnB,EAAEc,KAAKC,iBAAY,EAAOf,EAAEoB,aAAaf,QAAQS,KAAKC,WAAWK,aAAaD,WAAWX,EAAEW,YAAhN,gD,4EAA4N,SAAQrB,GAAG,IAAMC,EAAEe,KAAKC,WAAWM,cAAcrB,IAAEC,SAASH,EAAEwB,eAAexB,EAAEyB,eAAe,OAAOjB,QAAQC,QAAQC,YAAET,IAAIA,EAAEU,Y,0CAAU,SAA6BD,GAAG,IAAMV,EAAEC,YAAEC,IAAEC,SAASO,EAAEc,gBAAgB,OAAOhB,QAAQC,QAAQT,K,mBAAG,SAAMU,GAAG,IAAMV,EAAEK,YAAEH,IAAEC,SAASO,EAAEc,eAAed,EAAEgB,SAAShB,EAAEiB,qBAAqB,OAAO3B,GAAGA,EAAE4B,SAAS,SAAClB,EAAER,GAAKF,EAAE6B,IAAI3B,EAAE,MAAMQ,OAAE,EAAOA,EAAEC,aAAaH,QAAQC,QAAQT,K,uEAAG,WAAyBU,GAAzB,mBAAAX,EAAA,yDAAkCC,EAAEU,EAAEoB,eAAeC,KAAK,SAAArB,GAAC,OAAEA,EAAE,IAAIR,IAAEQ,GAAG,QAAOT,EAAE+B,YAAEhC,EAAEU,EAAEuB,cAAc,KAAK,KAAKvB,EAAEwB,eAAmBxB,EAAEyB,MAAtI,yCAAmJlC,GAAGA,EAAEU,UAAxJ,cAAuKN,EAAE+B,YAAEnC,EAAES,EAAE2B,cAAc3B,EAAEyB,MAAMzB,EAAE4B,cAAc5B,EAAE6B,eAAvN,kBAA6OlC,GAAGA,EAAEM,UAAlP,2C","file":"static/js/173.9062ba5c.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.21/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as e}from\"../../core/maybe.js\";import r from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as t,split as s,mosaic as i,approximateTransform as m}from\"./rasterFunctions/pixelUtils.js\";import{convertVectorFieldData as l}from\"./rasterFunctions/vectorFieldUtils.js\";import n from\"../../renderers/support/RasterSymbolizer.js\";import c from\"../../geometry/Extent.js\";class a{convertVectorFieldData(o){const t=r.fromJSON(o.pixelBlock),s=l(t,o.type);return Promise.resolve(e(s)&&s.toJSON())}async decode(e){const r=await o(e.data,e.options);return r&&r.toJSON()}symbolize(o){o.pixelBlock=r.fromJSON(o.pixelBlock),o.extent=o.extent?c.fromJSON(o.extent):null;const t=this.symbolizer.symbolize(o);return Promise.resolve(e(t)&&t.toJSON())}async updateSymbolizer(e){var r;this.symbolizer=n.fromJSON(e.symbolizerJSON),e.histograms&&\"rasterStretch\"===(null==(r=this.symbolizer)?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(o){const t=this.symbolizer.simpleStretch(r.fromJSON(o.srcPixelBlock),o.stretchParams);return Promise.resolve(e(t)&&t.toJSON())}estimateStatisticsHistograms(e){const o=t(r.fromJSON(e.srcPixelBlock));return Promise.resolve(o)}split(e){const o=s(r.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return o&&o.forEach(((e,r)=>{o.set(r,null==e?void 0:e.toJSON())})),Promise.resolve(o)}async mosaicAndTransform(e){const o=e.srcPixelBlocks.map((e=>e?new r(e):null)),t=i(o,e.srcMosaicSize,null,null,e.alignmentInfo);if(!e.coefs)return t&&t.toJSON();const s=m(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return s&&s.toJSON()}}export{a as default};\n"],"sourceRoot":""}